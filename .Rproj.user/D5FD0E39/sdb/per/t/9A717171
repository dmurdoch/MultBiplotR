{
    "collab_server" : "",
    "contents" : "# Plots a biplot for continuous data\nplot.ContinuousBiplot <- function(x, A1 = 1, A2 = 2, ShowAxis = FALSE, margin = 0,\n                                  PlotVars = TRUE, PlotInd = TRUE, WhatInds = NULL,\n                                  WhatVars = NULL, LabelVars = TRUE, LabelInd = TRUE,\n                                  IndLabels = NULL, VarLabels = NULL, mode = \"a\", CexInd\n                                  = NULL, CexVar = NULL, ColorInd = NULL, ColorVar =\n                                    NULL, LabelPos = 1, SmartLabels = FALSE, AbbreviateLabels=FALSE,\n                                  MinQualityInds = 0, MinQualityVars = 0, dp = 0,\n                                  PredPoints = 0, PlotAxis = FALSE, TypeScale =\n                                    \"Complete\", ValuesScale = \"Original\", SizeQualInd =\n                                    FALSE, SizeQualVars = FALSE, ColorQualInd = FALSE,\n                                  ColorQualVars = FALSE, PchInd = NULL, PchVar = NULL,\n                                  PlotClus = FALSE, TypeClus = \"ch\", ClustConf = 1,\n                                  ClustCenters = FALSE,  UseClusterColors = TRUE, CexClustCenters=1,\n                                  PlotSupVars = FALSE, ShowBox=FALSE, nticks=5, NonSelectedGray=FALSE, \n                                  PlotUnitCircle=TRUE, PlotContribFA=TRUE, AddArrow=FALSE,  ...){\n  \n  modes=c(\"p\", \"a\", \"b\", \"h\", \"ah\", \"s\")\n  if (is.numeric(mode)) \n    mode = modes[mode]\n  TypeScales=c(\"Complete\", \"StdDev\", \"BoxPlot\")\n  if (is.numeric(TypeScale)) \n    TypeScale = TypeScales[TypeScale]\n  ValuesScales=c(\"Original\", \"Transformed\")\n  if (is.numeric(ValuesScale)) \n    ValuesScale = ValuesScales[ValuesScale]\n  \n  # Obtaining coordinates and qualities for the representation\n  A = x$RowCoordinates[, c(A1, A2)]\n  B = x$ColCoordinates[, c(A1, A2)]\n  n = dim(A)[1]\n  p = dim(B)[1]\n  \n  if (is.null(IndLabels)) IndLabels=rownames(A)\n  if (is.null(VarLabels)) VarLabels=rownames(B)\n  \n  if (AbbreviateLabels){\n    IndLabels=abbreviate(IndLabels, minlength = 5L)\n    VarLabels=abbreviate(VarLabels, minlength = 5L)\n  }\n  \n  # Determining what rows to plot\n  if (is.null(WhatInds)) \n    WhatInds = matrix(1, n, 1)\n  else\n    if (!CheckBinaryVector(WhatInds)) {\n      AllRows = matrix(0, n, 1)\n      AllRows[WhatInds]=1\n      WhatInds=AllRows\n    }\n  WhatInds=as.logical(WhatInds)\n  \n  # Determining what columns to plot\n  if (is.null(WhatVars)) \n    WhatVars = matrix(1, p, 1)\n  else\n    if (!CheckBinaryVector(WhatVars)){\n      AllCols = matrix(0, p, 1)\n      AllCols[WhatVars]=1\n      WhatVars=AllCols\n    }\n  WhatVars=as.logical(WhatVars)   \n  \n  qlrcols = x$ColContributions[, A1] + x$ColContributions[, A2]\n  qlrrows = x$RowContributions[, A1] + x$RowContributions[, A2]\n  \n  WhatInds = WhatInds & (qlrrows>MinQualityInds*100)\n  WhatVars = WhatVars & (qlrcols>MinQualityVars*100)\n  \n  # Determining sizes and colors of the points\n  if (is.null(CexInd)) \n    CexInd = rep(0.8, n)\n  else if (length(CexInd == 1)) \n    CexInd = rep(CexInd, n)\n  \n  if (is.null(CexVar)) \n    CexVar = rep(0.8, p)\n  else if (length(CexVar == 1)) \n    CexVar = rep(CexVar, p)\n  \n  if (is.null(PchInd)) \n    PchInd = rep(1,n)\n  else if (length(PchInd == 1)) \n    PchInd = rep(PchInd, p)\n  \n  if (is.null(PchVar)) \n    PchVar = rep(16, p)\n  else if (length(PchVar == 1)) \n    PchVar = rep(PchVar, p)\n  \n  if (is.null(ColorInd)) \n    if (is.null(x$ColorInd)) \n      ColorInd = rep(\"red\",n)\n  else ColorInd = x$ColorInd\n  if (length(ColorInd)==1) ColorInd = rep(ColorInd,n)\n  \n  if (is.null(ColorVar)) \n    ColorVar = rep(\"black\", p)\n  if (SizeQualInd) \n    CexInd = cscale(qlrrows, rescale_pal())\n  if (SizeQualVars) \n    CexVar = cscale(qlrcols, rescale_pal())\n  \n  \n  if (NonSelectedGray){\n    ColorInd[which(WhatInds==0)]=\"gray80\"\n    ColorVar[which(WhatVars==0)]=\"gray80\"\n    WhatInds = matrix(1, n, 1)\n    WhatVars = matrix(1, p, 1)\n  }\n  \n  \n  if (ColorQualInd) \n    ColorInd = cscale(qlrrows, seq_gradient_pal(\"white\", \"red\"))\n  if (ColorQualVars) \n    ColorVar = cscale(qlrcols, seq_gradient_pal(\"white\", \"blue\"))\n  \n  if (x$alpha == 2){ShowAxis=TRUE\n  if(mode==\"s\") mode =\"a\"}\n  \n  if (ShowAxis) {\n    xaxt = \"s\"\n    yaxt = \"s\"\n  } else {\n    xaxt = \"n\"\n    yaxt = \"n\"\n  }\n  \n  if ((margin < 0) | (margin > 0.3)) \n    margin = 0\n  \n  if (PlotVars & PlotInd){\n    P = rbind(A, B)\n  }\n  else\n    if (PlotVars) P=B\n  else P=A\n  \n  if (!LabelVars) VarLabels=rep(\" \", p)\n  \n  xmin = min(P[, 1])\n  xmax = max(P[, 1])\n  ymin = min(P[, 2])\n  ymax = max(P[, 2])\n  xrang=abs(xmax-xmin)\n  yrang=abs(ymax-ymin)\n  if (xmax <0 ) xmax=xmax*(-1)\n  \n  P = rbind(P, c(xmax + (xmax - xmin) * margin, ymax + (ymax - ymin) * margin))\n  P = rbind(P, c(xmin - (xmax - xmin) * margin, ymin - (ymax - ymin) * margin))\n  plot(P[, 1], P[, 2], cex = 0, asp = 1, xaxt = xaxt, yaxt = yaxt, xlab=\"\",ylab=\"\", bty=\"n\", ...)\n  #op=par(mai=c(0,0,0.5,0))\n  #op=par(mar=c(1, 1, 1, 1) + 0.1)\n\n  title(main = paste(x$Title,\"(Dim\", A1,\"(\",round(x$Inertia[A1], digits=1),\"%)-\",A2,\"(\",round(x$Inertia[A2], digits=1),\"%))\")  , omi = c(0, 0, 0, 0))\n  \n  if (ShowBox) rect(xmin, ymin, xmax, ymax)\n  \n  if (ShowAxis) {abline(h = 0, v = 0, col = \"gray60\")\n    box()}\n  \n  if (PlotClus) {\n    ColorInd=PlotBiplotClusters(A, x$Clusters, TypeClus = TypeClus, ClusterColors = x$ClusterColors, ClusterNames=x$ClusterNames, centers = ClustCenters, ClustConf=ClustConf, CexClustCenters=CexClustCenters, ...)\n    if (x$ClusterType==\"gm\"){\n      ColorInd2=rgb((x$P %*% t(col2rgb(x$ClusterColors)))/255)\n      if (UseClusterColors) ColorInd = ColorInd2\n      PchInd=rep(16,n)\n    }\n  }\n  \n  \n  if (PlotVars) {\n    \n    if ((x$Type == \"FA\") & (PlotContribFA)) AddArrow=TRUE\n    \n    if (mode==\"s\")\n      Scales = GetBiplotScales(x, nticks=nticks,  TypeScale = TypeScale, ValuesScale = ValuesScale)\n    \n    for (j in 1:p) if (WhatVars[j]) \n      VarBiplot(B[j, 1], B[j, 2], xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, label = VarLabels[j], mode = mode, CexPoint = CexVar[j], Color = ColorVar[j], \n                ticks = Scales$Ticks[[j]], ticklabels = Scales$Labels[[j]], ts = TypeScale, PchPoint = PchVar[j], AddArrow=AddArrow, ...)\n    \n    for (idp in dp)\n      if ((idp > 0) & (idp < (p + 1))) {\n        g = B[idp, ]\n        nn = (t(g) %*% g)\n        scal <- (A %*% g)/nn[1, 1]\n        Dscal <- diag(as.vector(scal))\n        Fpr <- Dscal %*% matrix(rep(1, nrow(A)), ncol = 1) %*% t(g)\n        nrFpr <- nrow(Fpr)\n        dlines(A, Fpr, color=ColorVar[idp])\n      }\n    \n    for (idp in PredPoints)\n      if ((idp > 0) & (idp < (n + 1)))\n        for (j in 1:p){\n          g = B[j, ]\n          nn = (t(g) %*% g)\n          scal <- (A[idp,] %*% g)/nn[1, 1]\n          Fpr <- scal %*% t(g)\n          nrFpr <- nrow(Fpr)\n          dlines(matrix(A[idp,],1,2) , Fpr, color=ColorVar[j])\n        }\n  }\n  \n  \n  if (PlotInd) \n    for (i in 1:n)\n      if (WhatInds[i]){\n        points(A[i, 1], A[i, 2], col = ColorInd[i], cex=CexInd[i], pch = PchInd[i], ...)\n      }\n  \n  if (LabelInd)\n    for (i in 1:n)\n      if (WhatInds[i])\n        if (SmartLabels) \n          textsmart(cbind(A[i, 1], A[i, 2]), CexPoints = CexInd[i], ColorPoints = ColorInd[i], ...)\n  else text(A[i, 1], A[i, 2], IndLabels[i], cex = CexInd[i], col = ColorInd[i], pos = LabelPos, ...)\n  \n  \n  if ((x$Type == \"FA\") & (PlotUnitCircle)){\n    Circle(1)\n  }\n  \n  if ((x$Type == \"FA\") & (PlotContribFA)){\n    for (i in 1:10){\n      Circle(i/10, lty=3)\n      #text(i/10, 0, labels=i/10, cex=0.5)\n      text(0, i/10, labels=i/10, cex=0.5)\n      #text(-1*i/10, 0, labels=i/10, cex=0.5)\n     # text(0, -1*i/10, labels=i/10, cex=0.5)\n    }\n  }\n  \n  if (PlotSupVars) \n    plot.Supplementary.Variables(x, F1=A1, F2=A2, xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, mode=mode, TypeScale=TypeScale)\n  \n  # par(op)\n}\n\n\n",
    "created" : 1475781687723.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2362678468",
    "id" : "9A717171",
    "lastKnownWriteTime" : 1481638879,
    "last_content_update" : 1481638879,
    "path" : "~/Dropbox/0 ProgramasR/Paquetes/MultBiplotR/R/plot.ContinuousBiplot.R",
    "project_path" : "R/plot.ContinuousBiplot.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}