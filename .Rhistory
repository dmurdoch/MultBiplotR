# Esta es la función estándar para el cálculo de distancias
D=dist(X, method = "euclidean")
help("hclust")
# Cálculo del Análisis de Cluster
CL=hclust(D, method="ward.D")
plot(CL)
X <- scale(X)
# Esta es la función estándar para el cálculo de distancias
D=dist(X, method = "euclidean")
# Cálculo del Análisis de Cluster
CL=hclust(D, method="ward.D")
plot(CL)
# Cálculo del Análisis de Cluster
CL=hclust(D, method="centroid")
plot(CL)
plot(CL, hang = -1)
# Cálculo del Análisis de Cluster
CL=hclust(D, method="ward.D")
plot(CL)
plot(CL, hang = -1)
groups <- cutree(CL, k=4)
groups
rect.hclust(CL, k=5, border="red")
library(MultBiplotR)
library(MultBiplotR)
cabip=CA(SpidersSp)
plot(cabip)
vare.cca <- cca(varespec ~ Al + P + K, varechem)
library(vegan)
vare.cca <- cca(varespec ~ Al + P + K, varechem)
rda(SpidersSp, SpidersEnv, scale=TRUE)
rasp=rda(SpidersSp, SpidersEnv, scale=TRUE)
plot(rasp)
summary(rasp)
ccasp=cca(SpidersSp, SpidersEnv, scale=TRUE)
ccasp=cca(SpidersSp, SpidersEnv, scale=TRUE)
plot(ccasp)
ccasp
ccasp=pca(SpidersSp, SpidersEnv, scale=TRUE)
ccasp=cca(SpidersSp, SpidersEnv)
plot(ccasp)
ccasp
summary(ccasp)
rasp=rda(SpidersSp, SpidersEnv, scale=FALSE)
plot(rasp)
rasp
summary(rasp)
help(CCA)
help(CCA)
plot(ccasp)
ccasp=CCA(SpidersSp, SpidersEnv)
plot(ccasp)
plot(ccasp, mode="s")
data(Chemical)
x= Chemical[,5:16]
X=Convert2ThreeWay(x,Chemical$WEEKS, columns=FALSE)
stbip=StatisBiplot(X, SameVar=TRUE)
plot(stbip)
plot(stbip, VarColorType="ByTable")
plot(stbip, VarColorType="ByVar", mode="s",  MinQualityVars = 0.5)
plot(stbip, PlotRowTraj = TRUE, PlotVars=FALSE, RowColors=1:36)
help(read.table)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/0 Curso CSIC/STATIS")
read.table(file="Aznalcollar.txt")
read.table(file="Aznalcollar.txt")
read.table(file="Aznalcollar.txt", header = TRUE, rownames=1)
azn=read.table(file="Aznalcollar.txt", header = TRUE, row.names=1)
azn
X=azn[,3:7]
X
Tiempos=factor(azn$Tiempo)
X=Convert2ThreeWay(X,Tiempos, columns=FALSE)
x=azn[,3:7]
X=Convert2ThreeWay(x,Tiempos, columns=FALSE)
X
stbip=StatisBiplot(X, SameVar=TRUE)
plot(stbip)
plot(stbip, VarColorType="ByTable")
plot(stbip, VarColorType="ByVar", mode="s",  MinQualityVars = 0.5)
plot(stbip, PlotRowTraj = TRUE, PlotVars=FALSE, RowColors=1:36)
library(MultBiplotR)
install.packages(c("scales", "geometry", "deldir", "mirt", "stats4", "lattice", "GPArotation", "rgl", "optimr"))
data(jv73)
library(ade4)
data(jv73)
jv73
jv73$morpho
jv73$fac.riv
data(jv73)
kta1 <- ktab.within(withinpca(jv73$morpho, jv73$fac.riv, scann = FALSE))
statis1 <- statis(kta1, scann = FALSE)
plot(statis1)
kta1 <- ktab.within(withinpca(jv73$morpho, jv73$fac.riv, scann = FALSE))
statis1 <- statis(kta1, scann = FALSE)
plot(statis1)
kta1 <- ktab.within(withinpca(x, Tiempo, scann = FALSE))
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/0 Curso CSIC/STATIS")
azn=read.table(file="Aznalcollar.txt", header = TRUE, row.names=1)
Tiempos=factor(azn$Tiempo)
x=azn[,3:7]
kta1 <- ktab.within(withinpca(x, Tiempos, scann = FALSE))
kta1
statis1 <- statis(kta1, scann = FALSE)
plot(statis1)
kta1 <- ktab.within(withinpca(x, Tiempos, scann = TRUE))
class(stbip)
help(plot.StatisBiplot)
help("plot.StatisBiplot")
plot.StatisBiplot
X=Convert2ThreeWay(x,Tiempos, columns=FALSE)
stbip=StatisBiplot(X, SameVar=TRUE)
help("plot.StatisBiplot")
plot(stbip)
plot(stbip, VarColorType="ByTable")
plot(stbip, VarColorType="ByVar", mode="s",  MinQualityVars = 0.5)
plot(stbip, PlotRowTraj = TRUE, PlotVars=FALSE, RowColors=1:36)
library(MultBiplotR)
bip=PCA.Biplot(Protein[,3:11])
plot(bip)
## Biplot with scales on the variables
plot(bip, mode="s", margin=0.2)
library(MultBiplotR)
data(spiders)
Dis=BinaryProximities(spiders)
pco=PrincipalCoordinates(Dis)
plot(pco)
data(spiders)
X=Dataframe2BinaryMatrix(spiders)
logbip=BinaryLogBiplotGD(X,penalization=0.1)
plot(logbip, Mode="a")
summary(logbip)
logbip=BinaryLogBiplotGD(X,penalization=0.01)
plot(logbip, Mode="a")
logbip=BinaryLogBiplotGD(X,penalization=0.5)
plot(logbip, Mode="a")
logbip=BinaryLogBiplotGD(X,penalization=0.8)
plot(logbip, Mode="a")
BinaryLogBiplotGD
logbip=BinaryLogBiplotGD(X,penalization=0.8, A)
plot(logbip, Mode="a")
summary(logbip)
logbip=BinaryLogBiplotGD(X,penalization=0.1, A)
plot(logbip, Mode="a")
summary(logbip)
logbip=BinaryLogBiplotGD(X,penalization=0.1)
plot(logbip, Mode="a")
summary(logbip)
logbip=BinaryLogBiplotGD(X,penalization=0.01)
plot(logbip, Mode="a")
summary(logbip)
logbip=BinaryLogBiplotGD(X,penalization=0.1, Algorithm = "Joint")
plot(logbip, Mode="a")
summary(logbip)
logbip=BinaryLogBiplotGD(X,penalization=0.1, Algorithm = "Alternated")
plot(logbip, Mode="a")
library(MultBiplotR)
install.packages(c("scales", "geometry", "deldir", "rgl", "mirt", "GPARotation", "MASS", "kde2d", "lattice", "splom", "dae"))
install.packages("http://biplot.usal.es/classicalbiplot/multbiplot-in-r/multbiplotr_0332tar.gz", repos = NULL, type="source")
install.packages("http://biplot.usal.es/multbiplot/multbiplot-in-r/multbiplotr_190921tar.gz", repos = NULL, type="source")
data("RAPD")
data("RAPD")
help(RAPD)
library(MultBiplotR)
data("RAPD")
help(RAPD)
Origin=c("B", "B",  "B", "B", "B",  "B", "B", "B",  "B", "B", "B",  "B", "B", "B",
"SP", "C", "C", "Co",  "Co",  "CP", "CP", "CP", "CP", "CL", "MEX", "POJ", "POJ", "Ragnar",
"PR", "PR", "PR", "PR", "PR",  "V",  "V", "V", "V", "V",  "V",  "V", "V", "V",
"V", "V", "V", "V", "V", "V", "V", "V" )
Origin=as.factor(Origin)
# Simple Analysis of Principal Coordinates
Dis=BinaryProximities(RAPD, coefficient = 4)
pco=PrincipalCoordinates(Dis, dimension = 4)
plot(pco)
# Adding the Origin as clusters to plot
pco=AddCluster2Biplot(pco, ClusterType="us", Groups=Origin)
plot(pco, PlotClus=T)
plot(pco, PlotClus=T, TypeClus="st")
plot(pco, PlotClus=T, TypeClus="el")
# Adding hierarchical clusters (using the coordinates) to plot
pco=AddCluster2Biplot(pco, ClusterType="hi", NGroups=4)
plot(pco, PlotClus=T)
plot(pco$Dendrogram)
help(hclust)
# Adding hierarchical clusters (using the coordinates) to plot
pco=AddCluster2Biplot(pco, ClusterType="hi", NGroups=4, method="complete")
plot(pco, PlotClus=T)
op <- par(mfrow = 1:2)
plot(pco$Dendrogram)
plot(pco, PlotClus=T)
par(op)
# Adding k-means clusters (using the coordinates) to plot
pco=AddCluster2Biplot(pco, ClusterType="km", NGroups=4)
plot(pco, PlotClus=T)
# Adding k-means clusters (using the coordinates) to plot
pco=AddCluster2Biplot(pco, ClusterType="gm", NGroups=4)
plot(pco, PlotClus=T)
# Adding Bootstrap
pco=PrincipalCoordinates(Dis, dimension = 4, Bootstrap = T)
plot(pco, Bootstrap=T)
pco=AddCluster2Biplot(pco, ClusterType="us", Groups=Origin)
plot(pco, PlotClus=T, Bootstrap=T)
# MDS using SMACOF algorithm
sm=MDS(Dis, Model="Ordinal")
plot(sm)
sm=AddCluster2Biplot(sm, ClusterType="us", Groups=Origin)
plot(sm, PlotClus=T)
sm=MDS(Dis, Model="Identity", Bootstrap=T)
plot(sm, Bootstrap=T)
# MDS using SMACOF algorithm
sm=MDS(Dis, Model="Ordinal")
plot(sm)
sm=AddCluster2Biplot(sm, ClusterType="us", Groups=Origin)
plot(sm, PlotClus=T)
help(MDS)
sm=MDS(Dis, Model="Identity")
plot(sm)
sm=AddCluster2Biplot(sm, ClusterType="us", Groups=Origin)
plot(sm, PlotClus=T)
library(MultBiplotR)
help(install.packages)
# Simple Analysis of Principal Coordinates
help(BinaryProximities)
help("plot.Principal.Coordinates")
if (require(vegan)) {
data(mite)
}
mite.log <- log(mite[1:30,-35]+1)  # Equivalent: log1p(mite[1:30,-35])
# Principal coordinate analysis and simple ordination plot
mite.D <- vegdist(mite.log, "bray")
res <- pcoa(mite.D)
res$values
biplot(res)
library(ape)
mite.log <- log(mite[1:30,-35]+1)  # Equivalent: log1p(mite[1:30,-35])
# Principal coordinate analysis and simple ordination plot
mite.D <- vegdist(mite.log, "bray")
res <- pcoa(mite.D)
res$values
biplot(res)
mite
mite.log.st = apply(mite.log, 2, scale, center=TRUE, scale=TRUE)
par(mfrow=c(1,2))
biplot(res, mite.log)
biplot(res, mite.log.st)
install.packages("smacof")
library(smacof)
misdatos<-matrix(c(1,2,6,5,4,3,3,4,1,5,6,2,3,1,6,2,4,5,5,3,1,2,6,4),nrow=4,byrow=T)
dimnames(misdatos)<-list(c("PSOE","PP","PODEMOS","CIUDADANOS"),
c("EDUCACION/SANIDAD","LUCHA CORRUPCION","UNIDAD DE ESPANA","REG DEMOCRATICA","MEDIO AMBIENTE","ECONOMIA"))
res <- unfolding(misdatos)
res
summary(res)
## various configuration plots
plot(res)
plot(res, type = "p", pch = 25)
plot(res, type = "p", pch = 25, col.columns = 3,
label.conf.columns = list(label = TRUE, pos = 3, col = 3),
col.rows = 8, label.conf.rows = list(label = TRUE, pos = 3, col = 10))
library(MultBiplotR)
unf=Unfolding(misdatos, TransAbund = "None")
plot(unf, PlotTol=TRUE)
gensol=Genefold(misdatos)
class(gensol)="Unfolding"
plot(gensol)
bip=PCA.Biplot(7-misdatos, Scaling = 3)
plot(bip, margin=0.2, mode="s")
library(MultBiplotR)
library(plyr)
library(dplyr)
library(readxl)
library(xtable)
Datos <- read_excel("~/Library/Mobile Documents/com~apple~CloudDocs/DATA JLVV-10-18/Lesion.xlsx")
dim(Datos)
Datos=Datos[(Datos$CEPA!="DMSZ63127"),]
Datos=Datos[(Datos$CEPA!="MAFF51134"),]
Datos=Datos[(Datos$CEPA!="CBS252.59"),]
Exp1=Datos[Datos$EXPERIMENTO==1,]
media=mean(Exp1$LESION[Exp1$CEPA=="M1001"])
stdev=sd(Exp1$LESION[Exp1$CEPA=="M1001"])
Exp1$LESION=(Exp1$LESION-media)/stdev
Exp2=Datos[Datos$EXPERIMENTO==2,]
media=mean(Exp2$LESION[Exp2$CEPA=="M1001"])
stdev=sd(Exp2$LESION[Exp2$CEPA=="M1001"])
Exp2$LESION=(Exp2$LESION-media)/stdev
Exp3=Datos[Datos$EXPERIMENTO==3,]
media=mean(Exp3$LESION[Exp3$CEPA=="M1001"])
stdev=sd(Exp3$LESION[Exp3$CEPA=="M1001"])
Exp3$LESION=(Exp3$LESION-media)/stdev
Exp4=Datos[Datos$EXPERIMENTO==4,]
media=mean(Exp4$LESION[Exp4$CEPA=="M1001"])
stdev=sd(Exp4$LESION[Exp4$CEPA=="M1001"])
Exp4$LESION=(Exp4$LESION-media)/stdev
Exp5=Datos[Datos$EXPERIMENTO==5,]
media=mean(Exp5$LESION[Exp5$CEPA=="M1001"])
stdev=sd(Exp5$LESION[Exp5$CEPA=="M1001"])
Exp5$LESION=(Exp5$LESION-media)/stdev
Exp6=Datos[Datos$EXPERIMENTO==6,]
media=mean(Exp6$LESION[Exp6$CEPA=="M1001"])
stdev=sd(Exp6$LESION[Exp6$CEPA=="M1001"])
Exp6$LESION=(Exp6$LESION-media)/stdev
opar <- par(mfrow = c(3,2))
boxplot(LESION~as.factor(CEPA), data=Exp1, main="Experiment # 1", col=c(3,3,3,2,3,3), ylim=c(-4, 4))
boxplot(LESION~as.factor(CEPA), data=Exp2, main="Experiment # 2", col=c(3,3,3,3,3,2,3), ylim=c(-4, 4))
boxplot(LESION~as.factor(CEPA), data=Exp3, main="Experiment # 3", col=c(3,3,3,2,3,3,3), ylim=c(-4, 4))
boxplot(LESION~as.factor(CEPA), data=Exp4, main="Experiment # 4", col=c(3,3,3,3,3,3,2,3), ylim=c(-4, 4))
boxplot(LESION~as.factor(CEPA), data=Exp5, main="Experiment # 5", col=c(3,3,3,3,3,2,3,3), ylim=c(-4, 4))
boxplot(LESION~as.factor(CEPA), data=Exp6, main="Experiment # 6", col=c(3,3,3,3,3,2,3,3), ylim=c(-4, 4))
opar <- par(mfrow = c(1,1))
Experimento=rbind(Exp1, Exp2, Exp3, Exp4, Exp5, Exp6)
round(tapply(Experimento$LESION, Experimento$CEPA, mean), digits=3)
Experimento$CEPA=paste(Experimento$EXPERIMENTO, Experimento$CEPA, sep="-")
Experimento$REPETICION=Experimento(Size$REPETICION)
Experimento$HOJA=factor(Experimento$HOJA)
cepas=unique(Experimento$CEPA)
length(cepas)
Experimento$CEPA=factor(Experimento$CEPA)
Experimento$EXPERIMENTO=factor(Experimento$EXPERIMENTO)
mitabla=table(Experimento$CEPA, Experimento$EXPERIMENTO)>0
Colores=mitabla[,1]*1+mitabla[,2]*2+mitabla[,3]*3+mitabla[,4]*4+mitabla[,5]*5+mitabla[,6]*6+1
Colores[c(4, 12, 17, 27, 34, 42)]=0
op <- par(mar = c(7, 4, 4, 2) + 0.1)
boxplot(LESION~CEPA, data=Experimento, main="Complete Set", col=Colores, las=3)
library(MultBiplotR)
Colores[c(4, 12, 17, 27, 34, 42)]=1
ErrorBarPlotPanel(matrix(Experimento$LESION, ncol=1), groups=Experimento$CEPA, nrows=1, panel=TRUE, GroupsTogether=TRUE,
Confidence=0.95, p.adjust.method="None", UseANOVA=FALSE, Colors=Colores, Title="Lesion Size")
abline(v=0)
ErrorBarPlotPanel(matrix(Experimento$LESION, ncol=1), groups=Experimento$CEPA, nrows=1, panel=TRUE, GroupsTogether=TRUE,
Confidence=0.95, p.adjust.method="None", UseANOVA=TRUE, Colors=Colores, Title="Lesion Size - ANOVA - No adjustment")
abline(v=0)
ErrorBarPlotPanel(matrix(Experimento$LESION, ncol=1), groups=Experimento$CEPA, nrows=1, panel=TRUE, GroupsTogether=TRUE,
Confidence=0.95, p.adjust.method="Sidak", UseANOVA=TRUE, Colors=Colores, Title="Lesion Size - ANOVA - Sidak")
abline(v=0)
ErrorBarPlotPanel(matrix(Experimento$LESION, ncol=1), groups=Experimento$CEPA, nrows=1, panel=TRUE, GroupsTogether=TRUE,
Confidence=0.95, p.adjust.method="Bonferroni", UseANOVA=TRUE, Colors=Colores, Title="Lesion Size ANOVA - Bonferroni")
abline(v=0)
sblControles=Experimento[grepl("M1001",Experimento$CEPA),]
Experimento$CEPA
Experimento$CEPA
levels(4-ARG_2700-5
3-P7565-072-3
5- SL-9253-1
3-CHAT (es en realidad 3-CHAT-1 CAMBIAR NOMBRE SI PUEDES?)
6-CR-42230-1
3-CRO-I-41
2-F64330-2
4-Br85925-1
6-A52339-1
1-LARS318
5-CANOP-2Co
1-CBS113173
2-SW-8046-2
1-JAB2)
levels(Experimento$CEPA)
niveles=levels(Experimento$CEPA)
niveles[14]
niveles[14]="3-CA-CHAT-1"
niveles[14]="3-CA-CHAT-1"
levels(Experimento$CEPA)=niveles
levels(Experimento$CEPA)
as.char(Experimento$CEPA)
as.character(Experimento$CEPA)
Seleccion=c("4-ARG_2700-5", "3-P7565-072-3", "5- SL-9253-1", "3-CHAT-1", "6-CR-42230-1", "3-CRO-I-41", "2-F64330-2"
"4-Br85925-1", "6-A52339-1", "1-LARS318", "5-CANOP-2Co", "1-CBS113173", "2-SW-8046-2", "1-JAB2")
Seleccion=c("4-ARG_2700-5", "3-P7565-072-3", "5- SL-9253-1", "3-CHAT-1", "6-CR-42230-1", "3-CRO-I-41", "2-F64330-2"
"4-Br85925-1", "6-A52339-1", "1-LARS318", "5-CANOP-2Co", "1-CBS113173", "2-SW-8046-2", "1-JAB2")
Seleccion=c("4-ARG_2700-5", "3-P7565-072-3", "5- SL-9253-1", "3-CHAT-1", "6-CR-42230-1", "3-CRO-I-41", "2-F64330-2", "4-Br85925-1", "6-A52339-1", "1-LARS318", "5-CANOP-2Co", "1-CBS113173", "2-SW-8046-2", "1-JAB2")
which(as.character(Experimento$CEPA) %in% Seleccion)
as.character(Experimento$CEPA) %in% Seleccion
as.character(Experimento$CEPA)
as.character(Experimento$CEPA) %in% Seleccion
as.character(niveles) %in% Seleccion
Seleccionados=as.character(niveles) %in% Seleccion
ErrorBarPlotPanel(matrix(Experimento$LESION, ncol=1), groups=Experimento$CEPA, nrows=1, panel=TRUE, GroupsTogether=TRUE,
Confidence=0.95, p.adjust.method="Bonferroni", UseANOVA=TRUE, Colors=Colores, Title="Lesion Size ANOVA - Bonferroni"
)
ErrorBarPlotPanel(matrix(Experimento$LESION, ncol=1), groups=Experimento$CEPA, nrows=1, panel=TRUE, GroupsTogether=TRUE,
Confidence=0.95, p.adjust.method="Bonferroni", UseANOVA=TRUE, Colors=Colores, Title="Lesion Size ANOVA - Bonferroni"
)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/ErrorBarPlotPanel.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/ErrorBarPlotPanel.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/ErrorBarPlotPanel.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/ErrorBarPlotPanel.R')
ErrorBarPlotPanel(matrix(Experimento$LESION, ncol=1), groups=Experimento$CEPA, nrows=1, panel=TRUE, GroupsTogether=TRUE,
Confidence=0.95, p.adjust.method="Bonferroni", UseANOVA=TRUE, Colors=Colores, Title="Lesion Size ANOVA - Bonferroni")
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/ErrorBarPlotPanel.R')
ErrorBarPlotPanel(matrix(Experimento$LESION, ncol=1), groups=Experimento$CEPA, nrows=1, panel=TRUE, GroupsTogether=TRUE,
Confidence=0.95, p.adjust.method="Bonferroni", UseANOVA=TRUE, Colors=Colores, Title="Lesion Size ANOVA - Bonferroni")
ErrorBarPlotPanel(matrix(Experimento$LESION, ncol=1), groups=Experimento$CEPA, nrows=1, panel=TRUE, GroupsTogether=TRUE,
Confidence=0.95, p.adjust.method="Bonferroni", UseANOVA=TRUE, Colors=Colores, Title="Lesion Size ANOVA - Bonferroni", Selection=Seleccionados)
niveles
niveles=levels(Experimento$CEPA)
niveles[14]="3-CA-CHAT-1"
levels(Experimento$CEPA)=niveles
niveles=levels(Experimento$CEPA)
niveles
Seleccion=c("4-ARG_2700-5", "3-P7565-072-3", "5- SL-9253-1", "3-CHAT-1", "6-CR-42230-1", "3-CRO-I-41", "2-F64330-2", "4-Br85925-1", "6-A52339-1", "1-LARS318", "5-CANOP-2Co", "1-CBS113173", "2-SW-8046-2", "1-JAB2")
Seleccion
niveles
Seleccionados=as.character(niveles) %in% Seleccion
Seleccionados
ErrorBarPlotPanel(matrix(Experimento$LESION, ncol=1), groups=Experimento$CEPA, nrows=1, panel=TRUE, GroupsTogether=TRUE,
Confidence=0.95, p.adjust.method="Bonferroni", UseANOVA=TRUE, Colors=Colores, Title="Lesion Size ANOVA - Bonferroni", Selection=Seleccionados)
Seleccion=c("4-ARG_2700-5", "3-P7565-072-3", "5- SL-9253-1", "3-CA-CHAT-1", "6-CR-42230-1", "3-CRO-I-41",
"2-F64330-2", "4-Br85925-1", "6-A52339-1", "1-LARS318", "5-CANOP-2Co", "1-CBS113173", "2-SW-8046-2", "1-JAB2")
Seleccionados=as.character(niveles) %in% Seleccion
ErrorBarPlotPanel(matrix(Experimento$LESION, ncol=1), groups=Experimento$CEPA, nrows=1, panel=TRUE, GroupsTogether=TRUE,
Confidence=0.95, p.adjust.method="Bonferroni", UseANOVA=TRUE, Colors=Colores, Title="Lesion Size ANOVA - Bonferroni", Selection=Seleccionados)
niveles
Seleccion=c("4-ARG_2700-5", "3-P7565-072-3", "5- SL-9253-1", "3-CA-CHAT-1", "6-CR-42230-1", "3-CRO-I-41",
"2-F64330-2", "4-Br85925-1", "6-A-52339-1", "1-LARS318", "5-CANOP-2Co", "1-CBS113173", "2-SW-8046-2", "1-JAB2")
Seleccionados=as.character(niveles) %in% Seleccion
Seleccionados
sum(Seleccionados)
Seleccion=c("4-ARG-2700-5", "3-P7565-072-3", "5-SL-9253-1", "3-CA-CHAT-1", "6-CR-42230-1", "3-CRO-I-41",
"2-F64330-2", "4-Br85925-1", "6-A-52339-1", "1-LARS318", "5-CANOP-2Co", "1-CBS113173", "2-SW-8046-2", "1-JAB2")
Seleccionados=as.character(niveles) %in% Seleccion
sum(Seleccionados)
Seleccion=c("4-ARG-2700-5", "3-P7565-072-3", "5-SL-9253-1", "3-CA-CHAT-1", "6-CR-42230-1", "3-CRO-I-41",
"2-F64330-2", "4-Br85925-1", "6-A-52339-1", "1-LARS318", "5-CANOP-2Co", "1-CBS113173", "2-SW-8046-2", "1-JAB2")
Seleccionados=as.character(niveles) %in% Seleccion
ErrorBarPlotPanel(matrix(Experimento$LESION, ncol=1), groups=Experimento$CEPA, nrows=1, panel=TRUE, GroupsTogether=TRUE,
Confidence=0.95, p.adjust.method="Bonferroni", UseANOVA=TRUE, Colors=Colores, Title="Lesion Size ANOVA - Bonferroni", Selection=Seleccionados)
ErrorBarPlotPanel(matrix(Experimento$LESION, ncol=1), groups=Experimento$CEPA, nrows=1, panel=TRUE, GroupsTogether=TRUE,
Confidence=0.95, p.adjust.method="Bonferroni", UseANOVA=TRUE, Colors=Colores, Title="Lesion Size (ANOVA - Bonferroni)", Selection=Seleccionados)
abline(v=0)
install.packages("sjPlot")
install.packages("sjmisc")
library(sjPlot)
library(sjmisc)
library(ggplot2)
library(plyr)
library(dplyr)
library(readxl)
library(xtable)
Growth <- read_excel("~/Library/Mobile Documents/com~apple~CloudDocs/DATA JLVV-10-18/growth/GROWTH_RATE2.xlsx")
View(Growth)
dim(Growth)
Growth$STRAIN=as.factor(Growth$STRAIN)
Growth$MEDIUM=as.factor(Growth$MEDIUM)
Growth$EXP=as.factor(Growth$EXP)
levels(Growth$EXP)=paste("Exp",levels(Growth$EXP))
Growth=Growth[which(!is.na(Growth$GROWTH_RATE)),]
table(Growth$STRAIN)
table(Growth$MEDIUM, Growth$STRAIN)
table(Growth$EXP, Growth$STRAIN)
M001=Growth[Growth$STRAIN=="M1001",]
boxplot(GROWTH_RATE~EXP + MEDIUM, data=M001, col=c(0,0,0,0,0,0,2,2,2,2,2,2,3,3,3,3,3,3), cex.axis=0.8, las=3, ylim=c(0, 2))
boxplot(GROWTH_RATE~ MEDIUM + EXP , data=M001, col=c(0,0,0,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6), cex.axis=0.8, las=3, ylim=c(0, 2))
miaov=aov(GROWTH_RATE~ EXP * MEDIUM, data=M001)
summary(miaov)
xtable(miaov)
n1=dim(M001)[1]
M001T=M001
mexp=tapply(M001$GROWTH_RATE, M001$EXP, mean)
mmed=tapply(M001$GROWTH_RATE, M001$MEDIUM, mean)
mexpmed=tapply(M001$GROWTH_RATE, list(M001$EXP,M001$MEDIUM), mean)
coef(miaov)
mexp[M001$EXP]
mmed[M001$MEDIUM]
mexpmed[M001$EXP,M001$MEDIUM]
for (i in 1:n1){
M001T$GROWTH_RATE[i]=M001$GROWTH_RATE[i] - mexpmed[M001$EXP[i],M001$MEDIUM[i]] + mmed[M001$MEDIUM[i]]
}
boxplot(GROWTH_RATE~EXP + MEDIUM, data=M001T, col=c(0,0,0,0,0,0,2,2,2,2,2,2,3,3,3,3,3,3), cex.axis=0.8, las=3, ylim=c(0, 2))
boxplot(GROWTH_RATE~ MEDIUM + EXP , data=M001T, col=c(0,0,0,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6), cex.axis=0.8, las=3, ylim=c(0, 2))
miaov=aov(GROWTH_RATE~ EXP * MEDIUM, data=M001T)
summary(miaov)
xtable(miaov)
Exp1=Growth[Growth$EXP=="Exp 1",]
Exp2=Growth[Growth$EXP=="Exp 2",]
Exp3=Growth[Growth$EXP=="Exp 3",]
Exp4=Growth[Growth$EXP=="Exp 4",]
Exp5=Growth[Growth$EXP=="Exp 5",]
Exp6=Growth[Growth$EXP=="Exp 6",]
opar <- par(mfrow = c(3,2),oma = c(2, 2, 2, 2))
boxplot(GROWTH_RATE~droplevels(STRAIN)+MEDIUM, data=Exp1, cex.axis=0.7, col=c(0,0,0,0,2,0,0,0), las=3, ylim=c(0, 2), xlab="", main="Exp 1")
boxplot(GROWTH_RATE~droplevels(STRAIN)+MEDIUM, data=Exp2, cex.axis=0.7, col=c(0,0,0,0,0,0,0,0,2,0,0), las=3, ylim=c(0, 2), xlab="", main="Exp 2")
boxplot(GROWTH_RATE~droplevels(STRAIN)+MEDIUM, data=Exp3, cex.axis=0.7, col=c(0,0,0,2,0,0), las=3, ylim=c(0, 2), xlab="", main="Exp 3")
boxplot(GROWTH_RATE~droplevels(STRAIN)+MEDIUM, data=Exp4, cex.axis=0.7, col=c(0,0,0,2,0), las=3, ylim=c(0, 2), xlab="", main="Exp 4")
boxplot(GROWTH_RATE~droplevels(STRAIN)+MEDIUM, data=Exp5, cex.axis=0.7, col=c(0,0,0,0,0,0,2), las=3, ylim=c(0, 2), xlab="", main="Exp 5")
boxplot(GROWTH_RATE~droplevels(STRAIN)+MEDIUM, data=Exp6, cex.axis=0.7, col=c(0,0,0,0,2,0,0,0), las=3, ylim=c(0, 2), xlab="", main="Exp 6")
mtext("Initial Data", outer = TRUE, cex = 1.5)
opar <- par(mfrow = c(1,1))
Growth$EXPSTRAIN=paste(as.character(Growth$EXP) ,as.character(Growth$STRAIN))
boxplot(GROWTH_RATE~EXPSTRAIN, data=Growth, cex.axis=0.7, col=c(0,0,0,0,2,0,0,0,
0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0, 0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0), las=3, xlab="", main="Strains")
GrowthT=Growth
n=dim(Growth)[1]
for (i in 1:n){
GrowthT$GROWTH_RATE[i]=Growth$GROWTH_RATE[i] - mexpmed[Growth$EXP[i],Growth$MEDIUM[i]] + mmed[Growth$MEDIUM[i]]
}
Exp1T=GrowthT[GrowthT$EXP=="Exp 1",]
Exp2T=GrowthT[GrowthT$EXP=="Exp 2",]
Exp3T=GrowthT[GrowthT$EXP=="Exp 3",]
Exp4T=GrowthT[GrowthT$EXP=="Exp 4",]
Exp5T=GrowthT[GrowthT$EXP=="Exp 5",]
Exp6T=GrowthT[GrowthT$EXP=="Exp 6",]
opar <- par(mfrow = c(3,2),oma = c(2, 2, 2, 2))
boxplot(GROWTH_RATE~droplevels(STRAIN)+MEDIUM, data=Exp1T, cex.axis=0.7, col=c(0,0,0,0,2,0,0,0), las=3, ylim=c(0, 2), xlab="", main="Exp 1")
boxplot(GROWTH_RATE~droplevels(STRAIN)+MEDIUM, data=Exp2T, cex.axis=0.7, col=c(0,0,0,0,0,0,0,0,2,0,0), las=3, ylim=c(0, 2), xlab="", main="Exp 2")
boxplot(GROWTH_RATE~droplevels(STRAIN)+MEDIUM, data=Exp3T, cex.axis=0.7, col=c(0,0,0,2,0,0), las=3, ylim=c(0, 2), xlab="", main="Exp 3")
boxplot(GROWTH_RATE~droplevels(STRAIN)+MEDIUM, data=Exp4T, cex.axis=0.7, col=c(0,0,0,2,0), las=3, ylim=c(0, 2), xlab="", main="Exp 4")
boxplot(GROWTH_RATE~droplevels(STRAIN)+MEDIUM, data=Exp5T, cex.axis=0.7, col=c(0,0,0,0,0,0,2), las=3, ylim=c(0, 2), xlab="", main="Exp 5")
boxplot(GROWTH_RATE~droplevels(STRAIN)+MEDIUM, data=Exp6T, cex.axis=0.7, col=c(0,0,0,0,2,0,0,0), las=3, ylim=c(0, 2), xlab="", main="Exp 6")
mtext("Transformed Data", outer = TRUE, cex = 1.5)
opar <- par(mfrow = c(1,1))
miaov2=aov(GROWTH_RATE~ STRAIN*MEDIUM, data=GrowthT)
summary(miaov2)
xtable(miaov2)
plot_model(miaov2, type="int", col=c(2,4,3))+ theme(axis.text.x = element_text(angle = 90, hjust = 1))+ ggtitle("Interaction Plot")+theme(plot.title = element_text(hjust = 0.5))
