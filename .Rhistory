estimacion.boot$t0
estimacion.boot$t
library(MultBiplotR)
plot(cars)
knitr::opts_chunk$set(echo = TRUE)
local({
r <- getOption("repos")
r["CRAN"] <- "http://cran.cnr.berkeley.edu/"
options(repos = r)
})
# install.packages(c("scales", "geometry", "deldir", "rgl", "mirt", "GPARotation", "MASS", "kde2d", "lattice", "splom", "dae"))
# install.packages("http://biplot.usal.es/multbiplot/multbiplot-in-r/multbiplotr_191119tar.gz", repos = NULL, type="source")
library(MultBiplotR)
data("RAPD")
Origin=c("B", "B",  "B", "B", "B",  "B", "B", "B",  "B", "B", "B",  "B", "B", "B",
"SP", "C", "C", "Co",  "Co",  "CP", "CP", "CP", "CP", "CL", "MEX", "POJ", "POJ", "Ragnar",
"PR", "PR", "PR", "PR", "PR",  "V",  "V", "V", "V", "V",  "V",  "V", "V", "V",
"V", "V", "V", "V", "V", "V", "V", "V" )
Origin=as.factor(Origin)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/Biplot MarkDown")
installed.packages()
paquetes=installed.packages()
help("save")
save(paquetes, file="paquetes6.rda")
load("~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/paquetes6.rda")
View(paquetes)
View(paquetes)
install.packages(paquetes)
install.packages(paquetes)
install.packages(paquetes)
library(MultBiplotR)
knitr::opts_chunk$set(echo = TRUE)
head("wine)
)
head(wine)
Vinos=wine
head(Vinos)
V
names(Vinos)
load("Vinos.rda")
head(Vinos)
library(car)
BoxPlotPanel(Vinos[,4:9], nrows=2, groups=Vinos$denomina)
BoxPlotPanel(Vinos[,4:9], nrows=2, groups=Vinos$grupo)
X=Vinos[,4:21]
acpvino=PCA.Analysis(X, Scaling = 5)
summary(acpvino)
plot(acpvino)
plot(acpvino, CorrelationCircle=TRUE)
acpvino=AddCluster2Biplot(acpvino, ClusterType="us", Groups = Vinos$grupo)
plot(acpvino, PlotClus=TRUE, ClustCenters=TRUE, margin=0.05, CexInd=0.7)
plot(acpvino, PlotClus=TRUE, ClustCenters=TRUE, margin=0.05, CexInd=0.7, TypeClus="el")
plot(acpvino, PlotClus=TRUE, ClustCenters=TRUE, margin=0.05, CexInd=0.7, TypeClus="st")
plot(X)
plot(X[,1:9])
plot(X[,10:18])
summary(acpvino)
plot(acpvino)
names(acpvino)
class(acpvino)
help(plot.PCA.Analysis)
help(plot.PCA.Analysis)
help(plot.PCA.Analysis)
help("plot.ContinuousBiplot")
plot(acpvino)
acpvino=AddCluster2Biplot(acpvino, ClusterType="us", Groups = Vinos$grupo)
plot(acpvino, PlotClus=TRUE, ClustCenters=TRUE, margin=0.05, CexInd=0.7)
plot(acpvino, PlotClus=TRUE, ClustCenters=TRUE, margin=0.05, CexInd=0.7, TypeClus="st")
bipvino=PCA.Biplot(X, Scaling = 5)
summary(bipvino)
```{r message =FALSE}
plot(bipvino)
plot(bipvino, mode="s")
plot(bipvino, mode="s", margin=0.2)
plot(bipvino, mode="ah", margin=0.2)
plot(bipvino, mode="ah", margin=0.2, CorrelationCircle=TRUE)
CorrelationCircle(bipvino)
ColContributionPlot(bipvino)
plot(bipvino, dp=1, margin=0.2)
plot(bipvino, dp=1, mose="s")
plot(bipvino, dp=1, mode="s")
plot(bipvino, dp=1, mode="s", ColorInd=1:18)
plot(bipvino, dp=1, mode="s", ColorVar=1:18)
plot(bipvino, dp=1, mode="s", ColorVar=c(1, rep(2,17)))
plot(bipvino, dp=1, mode="s", ColorVar=c(1, rep(0,17)))
plot(bipvino, dp=1, mode="s", ColorVar=c(1, rep(2,17)))
plot(bipvino, dp=1, mode="s", ColorVar=c(1, rep(3,17)))
plot(bipvino, dp=1, mode="s", ColorVar=c("black", rep("grey",17)))
plot(bipvino, dp=1, mode="s", ColorVar=1:18)
plot(bipvino, PredPoints=1, mode="s", ColorVar=1:18)
plot(bipvino, PlotVar=FALSE)
plot(bipvino, PlotClus=TRUE)
bipvino=AddCluster2Biplot(bipvino, ClusterType="hi", method="ward.D")
plot(bipvino, PlotClus=TRUE)
bipvino=AddCluster2Biplot(bipvino, NGroups=4, ClusterType="hi", method="ward.D")
plot(bipvino, PlotClus=TRUE)
bipvino=AddCluster2Biplot(bipvino, NGroups=4, ClusterType="hi", method="ward.D", Original=TRUE)
plot(bipvino, PlotClus=TRUE)
plot(bipvino$Dendrogram)
plot(bipvino, MinQualityVars=0.5)
plot(bipvino, MinQualityVars=50)
plot(bipvino, MinQualityVars=0.8)
help(Canonical.Variate.Analysis)
CVAb=CanonicalBiplot(X, group= Vinos$grupo, InitialTransform = 5)
summary(CVAb)
plot(CVAb)
bipvino=HJ.Biplot(X, Scaling = 5)
bipvinohj=HJ.Biplot(X, Scaling = 5)
plot(bipvinohj)
knitr::opts_chunk$set(echo = FALSE)
n=nrow(SpidersSp)
p=ncol(SpidersSp)
library(MultBiplotR)
knitr::opts_chunk$set(echo = TRUE)
n=nrow(SpidersSp)
p=ncol(SpidersSp)
Y=matrix(as.numeric(SpidersSp>0), n, p)
Y
as.numeric(SpidersSp>0)
rownames(Y)=rownames(SpidersSp)
colnames(Y)=abbreviate(colnames(SpidersSp))
Y
head(SpidersSp)
head(Y)
head(Y)
Dis=BinaryProximities(Y, coefficient = 4)
pco=PrincipalCoordinates(Dis, dimension = 4)
plot(pco)
help(BinaryProximities)
Dis=BinaryProximities(Y, coefficient = "Simple_Matching")
pco=PrincipalCoordinates(Dis, dimension = 4)
plot(pco)
Dis=BinaryProximities(Y, coefficient = "Simple_Matching")
summary(pco)
plot(pco)
help(AddCluster2Biplot)
pco=AddCluster2Biplot(pco, NGroups=3, ClusterType="km")
plot(pco, PlotClus=T)
AddSupVars2Biplot(pco, Y)
Y
AddBinVars2Biplot(pco, Y)
pco=AddBinVars2Biplot(pco, Y)
pco=AddBinVars2Biplot(pco, Y)
plot(pco, PlotClus=T, PlotSupVars=TRUE)
plot(pco, PlotClus=T, PlotSupVars=TRUE)
plot(pco, PlotClus=T, PlotSupVars=TRUE)
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="a")
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="a")
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="a")
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="h")
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="h")
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="h")
pco$BinSupVarsBiplot
class(pco$BinSupVarsBiplot)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/PlotBinaryVar.R')
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="h")
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="s")
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/PlotBinaryVar.R')
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="s")
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/PlotBinaryVar.R')
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="ah")
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="ah")
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="b")
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="b", margin=0.2)
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="b", margin=0.2)
View(Y)
pco=AddContVars2Biplot(pco, SpidersEnv)
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="b", margin=0.2)
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="b", margin=0.2)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/plot.BinSupVarsBiplot.R')
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="b", margin=0.2)
library(MultBiplotR)
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="b", margin=0.2)
knitr::opts_chunk$set(echo = TRUE)
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="b", margin=0.2)
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="b", margin=0.2)
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="s", margin=0.2)
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="s", margin=0.2)
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="s", margin=0.2)
plot(pco, PlotClus=T, PlotSupVars=TRUE, SupMode="s", margin=0.2)
pco$ContSupVarsBiplot$R2
pco$ContSupVarsBiplot$R2
pco
names(pco)
names(pcoBinSupVarsBiplot)
names(pco$BinSupVarsBiplot)
summary(pco$BinSupVarsBiplot)
pco$BinSupVarsBiplot
pco$BinSupVarsBiplot$VarInfo
```{r echo=TRUE}
print(pco$BinSupVarsBiplot$VarInfo)
ktable(pco$BinSupVarsBiplot$VarInfo)
install.packages("kableExtra")
library(kableExtra)
ktable(pco$BinSupVarsBiplot$VarInfo)
ktable(pco$BinSupVarsBiplot$VarInfo)
library(kableExtra)
ktable(pco$BinSupVarsBiplot$VarInfo)
kable(pco$BinSupVarsBiplot$VarInfo)
kable(pco$BinSupVarsBiplot$VarInfo)
kable(pco$ContSupVarsBiplot$R2)
help("kable")
kable(pco$ContSupVarsBiplot$R2, col.names="R2")
Biplot2=BinaryLogBiplotGD(Y, penalization = 0.1, seed=0)
plot(Biplot2, RowCex=0.6, PchRows=16, margin=0)
summary(Biplot2, Latex=TRUE)
summary(Biplot2)
Biplot2=BinaryLogBiplotGD(Y, penalization = 0.1, seed=0)
names(Biplot2)
class(Biplot2)
library(MultBiplotR)
summary(Biplot2)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/summary.Binary.Logistic.Biplot.R')
summary(Biplot2, Kable=TRUE)
library(xtable)
summary(Biplot2, Kable=TRUE)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/summary.Binary.Logistic.Biplot.R')
library(MultBiplotR)
summary(Biplot2, Kable=TRUE)
knitr::opts_chunk$set(echo = TRUE)
summary(Biplot2, Kable=TRUE)
summary(Biplot2, Latex=TRUE)
summary(Biplot2, Latex=TRUE)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/summary.Binary.Logistic.Biplot.R')
summary(Biplot2, Latex=TRUE)
library(MultBiplotR)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/summary.Binary.Logistic.Biplot.R')
summary(Biplot2, Latex=TRUE)
RR=cbind(Biplot2$Deviances, Biplot2$Dfs, Biplot2$pvalues, Biplot2$Nagelkerke, Biplot2$CoxSnell, Biplot2$MacFaden, Biplot2$PercentsCorrec*100, Biplot2$Sensitivity*100, Biplot2$Specificity*100)
colnames(RR)=c("Deviance", "D.F", "P-val", "Nagelkerke", "Cox-Snell", "MacFaden", "% Correct", "Sensitivity", "Specificity")
rownames(RR)=rownames(Biplot2$ColumnParameters)
Total=c(Biplot2$DevianceTotal, Biplot2$TotalDf, Biplot2$p, Biplot2$TotNagelkerke, Biplot2$TotCoxSnell, Biplot2$TotMacFaden, Biplot2$TotalPercent*100, Biplot2$TotalSensitivity*100, Biplot2$TotalSpecificity*100)
RR=rbind(RR,Total)
print(RR)
kable(RR)
knitr::opts_chunk$set(echo = TRUE)
RR=cbind(Biplot2$Deviances, Biplot2$Dfs, Biplot2$pvalues, Biplot2$Nagelkerke, Biplot2$CoxSnell, Biplot2$MacFaden, Biplot2$PercentsCorrec*100, Biplot2$Sensitivity*100, Biplot2$Specificity*100)
colnames(RR)=c("Deviance", "D.F", "P-val", "Nagelkerke", "Cox-Snell", "MacFaden", "% Correct", "Sensitivity", "Specificity")
rownames(RR)=rownames(Biplot2$ColumnParameters)
Total=c(Biplot2$DevianceTotal, Biplot2$TotalDf, Biplot2$p, Biplot2$TotNagelkerke, Biplot2$TotCoxSnell, Biplot2$TotMacFaden, Biplot2$TotalPercent*100, Biplot2$TotalSensitivity*100, Biplot2$TotalSpecificity*100)
RR=rbind(RR,Total)
kable(RR)
plot(Biplot2, RowCex=0.6, PchRows=16, margin=0, PlotClus=T)
Biplot2=AddCluster2Biplot(Biplot2, NGroups=3, ClusterType="km")
Biplot2=AddCluster2Biplot(Biplot2, NGroups=3, ClusterType="km")
plot(Biplot2, RowCex=0.6, PchRows=16, margin=0, PlotClus=T)
plot(Biplot2, RowCex=0.6, PchRows=16, margin=0.1, PlotClus=T)
plot(Biplot2, RowCex=0.6, PchRows=16, margin=0.2, PlotClus=T)
plot(Biplot2, RowCex=0.6, PchRows=16, margin=0.2, PlotClus=T)
Biplot2=AddContVars2Biplot(Biplot2, SpidersEnv)
plot(Biplot2, RowCex=0.6, PchRows=16, margin=0.2, PlotClus=TPlotSupVars=TRUE, SupMode="s")
plot(Biplot2, RowCex=0.6, PchRows=16, margin=0.2, PlotClus=T, TPlotSupVars=TRUE, SupMode="s")
plot(Biplot2, RowCex=0.6, PchRows=16, margin=0.2, PlotClus=T, TPlotSupVars=TRUE)
plot(Biplot2, RowCex=0.6, PchRows=16, margin=0.2, PlotClus=T, TPlotSupVars=TRUE)
kable(Biplot2$ContSupVarsBiplot$R2, col.names="R2")
kable(Biplot2$ContSupVarsBiplot$R2, col.names="R2")
kable(cbind(pco$ContSupVarsBiplot$R2, Biplot2$ContSupVarsBiplot$R2), col.names=c("PCoA", "Biplot Logístico"))
Biplot=ConstrainedLogisticBiplot(Y,SpidersEnv, penalization=0.1)
plot(Biplot, RowCex=0.8, PchRows=16, PlotSupVars = FALSE)
plot(Biplot, RowCex=0.8, PchRows=16, PlotSupVars = FALSE)
View(Y)
library(knitr)
plot(Biplot2, RowCex=0.6, PchRows=16, margin=0.2, PlotClus=T, PlotSupVars=TRUE)
RR2=cbind(Biplot$Deviances, Biplot$Dfs, Biplot$pvalues, Biplot$Nagelkerke, Biplot$CoxSnell, Biplot$MacFaden, Biplot$PercentsCorrec*100, Biplot$Sensitivity*100, Biplot$Specificity*100)
colnames(RR2)=c("Deviance", "D.F", "P-val", "Nagelkerke", "Cox-Snell", "MacFaden", "% Correct", "Sensitivity", "Specificity")
rownames(RR2)=rownames(Biplot$ColumnParameters)
Total2=c(Biplot$DevianceTotal, Biplot$TotalDf, Biplot$p, Biplot$TotNagelkerke, Biplot$TotCoxSnell, Biplot$TotMacFaden, Biplot$TotalPercent*100, Biplot$TotalSensitivity*100, Biplot$TotalSpecificity*100)
RR2=rbind(RR2,Total2)
kable(RR2)
pco$BinSupVarsBiplot$VarInfo
pco$BinSupVarsBiplot
names(pco$BinSupVarsBiplot$VarInfo)
names(pco$BinSupVarsBiplot)
names(pco$BinSupVarsBiplot$PercentsCorrec)
names(pco$BinSupVarsBiplot$PercentsCorrec)
names(pco$BinSupVarsBiplot$VarInfo$PercentsCorrec)
names(pco$BinSupVarsBiplot$VarInfo)
pco$BinSupVarsBiplot$VarInfo
pco$BinSupVarsBiplot$VarInfo$PercentsCorrec
c(pco$BinSupVarsBiplot$VarInfo$PercentsCorrec, pco$BinSupVarsBiplot$TotalPercent)
Comparacion=cbind(c(pco$BinSupVarsBiplot$VarInfo$PercentsCorrec, pco$BinSupVarsBiplot$TotalPercent), c(Biplot2$PercentsCorrec*100, Biplot2$TotalPercent*100), c(Biplot2$PercentsCorrec*100, Biplot2$TotalPercent*100))
Comparacion
Comparacion=cbind(c(pco$BinSupVarsBiplot$VarInfo$PercentsCorrec, pco$BinSupVarsBiplot$TotalPercent), c(Biplot2$PercentsCorrec*100, Biplot2$TotalPercent*100), c(Biplot$PercentsCorrec*100, Biplot$TotalPercent*100))
RR2
Comparacion=cbind(c(pco$BinSupVarsBiplot$VarInfo$PercentsCorrec, pco$BinSupVarsBiplot$TotalPercent), c(Biplot2$PercentsCorrec*100, Biplot2$TotalPercent*100), c(Biplot$PercentsCorrec*100, Biplot$TotalPercent*100))
colnames(Comparacion)=c("PCoA", "Logistic Biplot", "Redundancy Analysis")
kable(Comparacion)
plot(Biplot, RowCex=0.8, PchRows=16, PlotSupVars=TRUE)
Biplot=ConstrainedLogisticBiplot(Y,SpidersEnv, penalization=0.1)
plot(Biplot, RowCex=0.8, PchRows=16, PlotSupVars=TRUE)
plot(Biplot, RowCex=0.8, PchRows=16, PlotSupVars=TRUE, margin=0.2)
plot(Biplot, RowCex=0.8, PchRows=16, PlotSupVars=TRUE, margin=0.2)
Biplot$ContSupVarsBiplot$R2
kable(cbind(pco$ContSupVarsBiplot$R2, Biplot2$ContSupVarsBiplot$R2, Biplot$ContSupVarsBiplot$R2), col.names=c("PCoA", "Biplot Logístico", "Aálisis de laRedundancia"))
PCA.Biplot(SpidersEnv)
EnvBip=PCA.Biplot(SpidersEnv)
EnvBip=PCA.Biplot(SpidersEnv)
plot(EnvBip, mode="s")
EnvBip=AddBinVars2Biplot(EnvBip, Y)
plot(EnvBip, PlotSupVars=TRUE, SupMode="s", margin=0.2)
c(EnvBip$BinSupVarsBiplot$VarInfo$PercentsCorrec, EnvBip$BinSupVarsBiplot$TotalPercent)
colnames(Comparacion)=c("PCoA", "Logistic Biplot", "Redundancy Analysis", "PCA Ambientales")
Comparacion2=cbind(c(pco$BinSupVarsBiplot$VarInfo$PercentsCorrec, pco$BinSupVarsBiplot$TotalPercent), c(Biplot2$PercentsCorrec*100, Biplot2$TotalPercent*100), c(Biplot$PercentsCorrec*100, Biplot$TotalPercent*100), c(EnvBip$BinSupVarsBiplot$VarInfo$PercentsCorrec, EnvBip$BinSupVarsBiplot$TotalPercent))
colnames(Comparacion2)=c("PCoA", "Logistic Biplot", "Redundancy Analysis", "PCA Ambientales")
kable(Comparacion2)
Comparacion2=cbind(c(pco$BinSupVarsBiplot$VarInfo$PercentsCorrec, pco$BinSupVarsBiplot$TotalPercent), c(Biplot2$PercentsCorrec*100, Biplot2$TotalPercent*100), c(Biplot$PercentsCorrec*100, Biplot$TotalPercent*100), c(EnvBip$BinSupVarsBiplot$VarInfo$PercentsCorrec, EnvBip$BinSupVarsBiplot$TotalPercent)*100)
colnames(Comparacion2)=c("PCoA", "Logistic Biplot", "Redundancy Analysis", "PCA Ambientales")
kable(Comparacion2)
names (EnvBip)
EnvBip$RowContributions
EnvBip$ColContributions
EnvBip$ColContributions[,1:2]
sum(EnvBip$ColContributions[,1:2],2)
cumsum(EnvBip$ColContributions[,1:2],2)
cumsum(EnvBip$ColContributions[,1:2])
round(t(apply(object$ColContributions,1, cumsum))
apply(EnvBip$ColContributions[,1:2],2, cumsum)
apply(EnvBip$ColContributions[,1:2],1, cumsum)
t(apply(EnvBip$ColContributions[,1:2],1, cumsum))
t(apply(EnvBip$ColContributions[,1:2],1, cumsum))[,2]
kable(cbind(pco$ContSupVarsBiplot$R2, Biplot2$ContSupVarsBiplot$R2, Biplot$ContSupVarsBiplot$R2, t(apply(EnvBip$ColContributions[,1:2],1, cumsum))[,2]), col.names=c("PCoA", "Biplot Logístico", "Aálisis de laRedundancia", "ACP"))
help("coinertia")
help("Coinertia")
SSI$Year == "a2006"
SSI2D=SSI[SSI$Year == "a2006",3:23]
rownames(SSI2D)=as.character(SSI$Country[SSI$Year == "a2006"])
SSIHuman2D=SSI2D[,1:9]
SSIEnvir2D=SSI2D[,10:16]
SSIEcon2D=SSI2D[,17:21]
Coin=Coinertia(SSIHuman2D, SSIEnvir2D)
Coin
plot(Coin)
CCA
help(CCA)
data(riano)
Sp=riano[,3:15]
Env=riano[,16:25]
ccabip=CCA(Sp, Env)
plot(ccabip)
ccabip=CCA(SpidersSp, SpidersEnv)
plot(ccabip)
plot(ccabip, mode="s")
ccabip=CCA(Y, SpidersEnv)
plot(ccabip, mode="s")
ccabip=CCA(Y, SpidersEnv)
plot(ccabip, mode="s")
summary(ccabip)
names(ccabip)
ccabip$Sites_Quality
ccabip$Species_Quality
ccabip$Species_Quality_AFC
summary.CCA.sol()
summary.CCA.sol
data(Chemical)
# Extract continous data from the original data frame.
x= Chemical[,5:16]
# Obtaining the three way table as a list
X=Convert2ThreeWay(x,Chemical$WEEKS, columns=FALSE)
# Calculating the Biplot associated to STATIS-ACT
stbip=StatisBiplot(X, SameVar=TRUE)
# Basic plot of the results
plot(stbip)
# Colors By Table
plot(stbip, VarColorType="ByTable")
# Colors By Variable
library(MultBiplotR)
data(Chemical)
# Extract continous data from the original data frame.
x= Chemical[,5:16]
x
Chemical
Chemical
# Obtaining the three way table as a list
X=Convert2ThreeWay(x,Chemical$WEEKS, columns=FALSE)
# Calculating the Biplot associated to STATIS-ACT
stbip=StatisBiplot(X, SameVar=TRUE)
# Basic plot of the results
plot(stbip)
# Colors By Table
plot(stbip, VarColorType="ByTable")
plot(stbip, PlotRowTraj = TRUE, PlotVars=FALSE, RowColors=1:36)
plot(stbip, PlotRowTraj = TRUE, PlotVars=TRUE, RowColors=1:36)
plot(stbip, PlotRowTraj = TRUE, PlotVars=FALSE, RowColors=1:36)
SSI$Year == "a2006"
SSI2D=SSI[SSI$Year == "a2006",3:23]
rownames(SSI2D)=as.character(SSI$Country[SSI$Year == "a2006"])
SSIHuman2D=SSI2D[,1:9]
SSIEnvir2D=SSI2D[,10:16]
SSIEcon2D=SSI2D[,17:21]
Coin=Coinertia(SSIHuman2D, SSIEnvir2D)
library(MultBiplotR)
SSI$Year == "a2006"
SSI2D=SSI[SSI$Year == "a2006",3:23]
rownames(SSI2D)=as.character(SSI$Country[SSI$Year == "a2006"])
SSIHuman2D=SSI2D[,1:9]
SSIEnvir2D=SSI2D[,10:16]
SSIEcon2D=SSI2D[,17:21]
Coin=Coinertia(SSIHuman2D, SSIEnvir2D)
Coin
summary(Coin)
SSI
View(SSI)
plot(Coin)
class(Coin)
Coin$XINFO
names=Coin$XINFO
names(Coin$XINFO)
Bip=Coin$XINFO
Bip
Coin$Type
library(MultBiplotR)
library(MultBiplotRGUI)
data(Protein)
bip=PCA.Biplot(Protein[,3:11])
plot(bip)
PCA.BiplotGUI(bip)
EditorMultBiplotRGUI(iris)
library(MultBiplotR)
install.packages("catR")
paquetes=installed.packages()
summary.ContinuousBiplot <- function(object, latex=FALSE, ...) {
if (object$Type=="PCA")
cat(" ###### Biplot for Principal Components Analysis #######\n\n")
if (object$Type=="FA")
cat(" ###### Biplot for Factor Analysis #######\n\n")
if (object$Type=="HJ"){
cat(" ###### HJ - Biplot #######\n\n")
}
cat("Call\n")
print(object$call)
cat("Type of coordinates:\n")
if (object$alpha==2)
tipo="Principal Normalization (Baricentric Scaling)"
if (object$alpha==1)
tipo="Row Principal Normalization (RMP-Biplot)"
if (object$alpha==0)
tipo="Column Principal Normalization (CMP-Biplot)"
if (object$alpha==0.5)
tipo="Symmetrical Normalization (SQRT - Biplot)"
if ((object$alpha>0) & (object$alpha<1) & (object$alpha != 0.5))
tipo=paste("Custom Normalization (Biplot con \alpha = ",gamma,")")
cat("Transformation of the raw data:\n")
print(object$Initial_Transformation)
cat("Type of Biplot\n")
print(object$Type)
cat("\n Eigenvalues & Explained Variance (Inertia)\n")
pp=cbind(object$EigenValues[1:object$Dimension], object$Inertia[1:object$Dimension], object$CumInertia[1:object$Dimension])
colnames(pp)=c("Eigenvalue", "Exp. Var", "Cummulative")
print(pp)
if (object$Type=="FA"){
cat(" Factor Analysis Loadings\n\n")
print(object$ColCoordinates)
}
cat("\n\n RELATIVE CONTRIBUTIONS OF THE FACTOR TO THE ELEMENT\n")
cat("\n Row Contributions \n")
print(round(object$RowContributions, digits=2))
cat("\n Column Contributions \n")
print(round(object$ColContributions, digits=2))
cat("\n\n\n Qualities of representation of the rows (Cummulative contributions) \n")
print(round(t(apply(object$RowContributions,1, cumsum)), digits=2))
cat("\n\n\n Qualities of representation of the columns (Cummulative contributions) \n")
print(round(t(apply(object$ColContributions,1, cumsum)), digits=2))
if (latex){
print(xtable(pp, caption="Explained Variance"))
print(xtable(round(object$RowContributions, digits=2), caption="Row Contributions Factor to element"))
print(xtable(round(object$ColContributions, digits=2), caption="Column Contributions Factor to element"))
}
}
paquetes
setwd("~/Desktop")
save(paquetes, file="paquetes.rda")
View(paquetes)
View(paquetes)
install.packages(paquetes)
install.packages(paquetes)
install.packages(paquetes)
0:3
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/ExternalBinaryLogisticBiplot.R')
library("MultBiplotR", lib.loc="~/Library/R/4.0/library")
data(spiders)
x2=Dataframe2BinaryMatrix(spiders)
colnames(x2)=colnames(spiders)
dist=BinaryProximities(x2)
pco=PrincipalCoordinates(dist)
pcobip=ExternalBinaryLogisticBiplot(pco)
pcobip$ColumnParameters
colnames(Pco$ColumnParameters)=paste("b",0:dimens, sep="")
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/ExternalBinaryLogisticBiplot.R')
pcobip=ExternalBinaryLogisticBiplot(pco)
pcobip$ColumnParameters
install.packages("fpca")
library("fpca", lib.loc="~/Library/R/4.0/library")
install.packages("fda")
library("fda", lib.loc="~/Library/R/4.0/library")
remove.packages("fda", lib="~/Library/R/4.0/library")
library("fda", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
daybasis65 <- create.fourier.basis(c(0, 365), nbasis=65, period=365)
daybasis65
harmaccelLfd <- vec2Lfd(c(0,(2*pi/365)^2,0), c(0, 365))
harmaccelLfd
harmfdPar     <- fdPar(daybasis65, harmaccelLfd, lambda=1e5)
daytempfd <- smooth.basis(day.5, CanadianWeather$dailyAv[,,"Temperature.C"],
daybasis65, fdnames=list("Day", "Station", "Deg C"))$fd
daytemppcaobj <- pca.fd(daytempfd, nharm=4, harmfdPar)
daytemppcaVarmx <- varmx.pca.fd(daytemppcaobj)
op <- par(mfrow=c(2,2))
daytempfd
plot.pca.fd(daytemppcaobj, cex.main=0.9)
plot.pca.fd(daytemppcaVarmx, cex.main=0.9)
par(op)
plot(daytemppcaobj$harmonics)
plot(daytemppcaVarmx$harmonics)
