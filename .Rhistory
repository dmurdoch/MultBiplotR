penalization = 0.2,showIter = FALSE)
plotNominalVariable(nameVar,nominalVar,estimRows,planex = 1,planey = 2,
xi=0,xu=1.5,yi=-1.5,yu=1.5,CexVar=0.7,ColorVar="green",PchVar=0.7,
addToPlot=TRUE,QuitNotPredicted=TRUE,ShowResults=TRUE,
linesVoronoi=TRUE,LabelVar=TRUE,tol = 1e-04, maxiter = 100,
penalization = 0.2,showIter = FALSE)
data(HairColor)
nlbo = NominalLogisticBiplot(HairColor,sFormula=NULL,
numFactors=2,method="EM",penalization=0.2,show=FALSE)
nameVar = nlbo$dataSet$ColumNames[2]
nominalVar = HairColor[,2]
estimRows = nlbo$RowsCoords
plotNominalVariable(nameVar,nominalVar,estimRows,planex = 1,planey = 2,
xi=-1.5,xu=1.5,yi=-1.5,yu=1.5,CexVar=0.7,ColorVar="blue",PchVar=0.7,
addToPlot=FALSE,QuitNotPredicted=TRUE,ShowResults=TRUE,
linesVoronoi=TRUE,LabelVar=TRUE,tol = 1e-04, maxiter = 100,
penalization = 0.3,showIter = FALSE)
nominalVar
data(mtcars)
mtcars$cyl=as.ordered(mtcars$cyl)
mtcars$gear=as.factor(mtcars$gear)
mtcars$vs=as.factor(mtcars$vs)
distances=GowerProximities(mtcars, Binary=9)
pcocars=PrincipalCoordinates(distances)
pcocars=MixedBiplot(pcocars)
plot(pcocars, mode="s", PlotSupVars=TRUE, SupMode="s")
source('~/Dropbox/0 ProgramasR/Paquetes/MultBiplotR/R/MixedBiplot.R')
pcocars=MixedBiplot(pcocars)
plot(pcocars, mode="s", PlotSupVars=TRUE, SupMode="s")
pcocars=PrincipalCoordinates(distances)
pcocars=MixedBiplot(pcocars)
plot(pcocars, mode="s", PlotSupVars=TRUE, SupMode="s")
pco=pcocars
Ordenadas=which(pco$Types=="ordered")
Y=as.data.frame(pco$Data[, Ordenadas])
colnames(Y)=colnames(pco$Data)[Ordenadas]
as.integer(Y[[1]])
bb=AddOrdVars2Biplot(pco, Y, tol = 0.000001, maxiterlogist = 100, penalization = 0.2, showiter = FALSE, initial = 1, alfa = 1)
names(bb)
plot(bb, mode="s", PlotSupVars=TRUE, SupMode="s")
library(MultBiplotR)
data(mtcars)
mtcars$cyl=as.ordered(mtcars$cyl)
mtcars$gear=as.factor(mtcars$gear)
mtcars$vs=as.factor(mtcars$vs)
distances=GowerProximities(mtcars, Binary=9)
pcocars=PrincipalCoordinates(distances)
plot(pcocars)
pcocars=MixedBiplot(pcocars)
plot(pcocars, mode="s", PlotSupVars=TRUE, SupMode="s")
pco=pcocars
Ordenadas=which(pco$Types=="ordered")
Y=as.data.frame(pco$Data[, Ordenadas])
colnames(Y)=colnames(pco$Data)[Ordenadas]
as.integer(Y[[1]])
bb=AddOrdVars2Biplot(pco, Y, tol = 0.000001, maxiterlogist = 100, penalization = 0.2, showiter = FALSE, initial = 1, alfa = 1)
names(bb)
plot(bb, mode="s", PlotSupVars=TRUE, SupMode="s")
Factores=which(pco$Types=="factor")
Y=as.data.frame(pco$Data[, Factores])
colnames(Y)=colnames(pco$Data)[Factores]
nameVar = "gears"
nominalVar = Y[[1]]
estimRows = bb$RowCoordinates
plotNominalVariable(nameVar,nominalVar,estimRows,planex = 1,planey = 2,
xi=0,xu=1.5,yi=-1.5,yu=1.5,CexVar=0.7,ColorVar="brown",PchVar=0.7,
addToPlot=TRUE,QuitNotPredicted=TRUE,ShowResults=TRUE,
linesVoronoi=TRUE,LabelVar=TRUE,tol = 1e-04, maxiter = 100,
penalization = 0.2,showIter = FALSE)
library(NominalLogisticBiplot)
plotNominalVariable(nameVar,nominalVar,estimRows,planex = 1,planey = 2,
xi=0,xu=1.5,yi=-1.5,yu=1.5,CexVar=0.7,ColorVar="brown",PchVar=0.7,
addToPlot=TRUE,QuitNotPredicted=TRUE,ShowResults=TRUE,
linesVoronoi=TRUE,LabelVar=TRUE,tol = 1e-04, maxiter = 100,
penalization = 0.2,showIter = FALSE)
nominalVar
help(AddCluster2Biplot)
bb=AddCluster2Biplot(bb )
plot(bb, mode="s", PlotSupVars=TRUE, SupMode="s")
help("plot.ContinuousBiplot")
plot(bb, mode="s", PlotSupVars=TRUE, SupMode="s",  PlotClus = TRUE, TypeClus = "ch")
plotNominalVariable(nameVar,nominalVar,estimRows,planex = 1,planey = 2,
xi=0,xu=1.5,yi=-1.5,yu=1.5,CexVar=0.7,ColorVar="magenta",PchVar=0.7,
addToPlot=TRUE,QuitNotPredicted=TRUE,ShowResults=TRUE,
linesVoronoi=TRUE,LabelVar=TRUE,tol = 1e-04, maxiter = 100,
penalization = 0.2,showIter = FALSE)
View(mtcars)
View(mtcars)
help(AddCluster2Biplot)
bb=AddCluster2Biplot(bb, ClusterType="us", Groups=mtcars$gear )
plot(bb, mode="s", PlotSupVars=TRUE, SupMode="s",  PlotClus = TRUE, TypeClus = "ch")
help("pretty")
nameVar = "gears"
nominalVar = Y[[1]]
estimRows = bb$RowCoordinates
library(NominalLogisticBiplot)
plotNominalVariable(nameVar,nominalVar,estimRows,planex = 1,planey = 2,
xi=0,xu=1.5,yi=-1.5,yu=1.5,CexVar=0.7,ColorVar="magenta",PchVar=0.7,
addToPlot=TRUE,QuitNotPredicted=TRUE,ShowResults=TRUE,
linesVoronoi=TRUE,LabelVar=TRUE,tol = 1e-04, maxiter = 100,
penalization = 0.2,showIter = FALSE)
names(bb)
bb$OrdSupVarsBiplot
names(bb)
bb$BinSupVarsBiplot
bb$ColContributions
round(bb$ColContributions, digits=3)
bb$R2
round(bb$R2/100, digits=3)
source('~/Dropbox/0 ProgramasR/Paquetes/MultBiplotR/R/MixedBiplot.R')
source('~/Dropbox/0 ProgramasR/Paquetes/MultBiplotR/R/MixedBiplot.R')
source('~/Dropbox/0 ProgramasR/Paquetes/MultBiplotR/R/MixedBiplot.R')
source('~/Dropbox/0 ProgramasR/Paquetes/MultBiplotR/R/MixedBiplot.R')
source('~/Dropbox/0 ProgramasR/Paquetes/MultBiplotR/R/MixedBiplot.R')
source('~/Dropbox/0 ProgramasR/Paquetes/MultBiplotR/R/MixedBiplot.R')
source('~/Dropbox/0 ProgramasR/Paquetes/MultBiplotR/R/AddSupVars2Biplot.R')
data(mtcars)
mtcars$cyl=as.ordered(mtcars$cyl)
mtcars$gear=as.factor(mtcars$gear)
mtcars$vs=as.factor(mtcars$vs)
distances=GowerProximities(mtcars, Binary=9)
pcocars=PrincipalCoordinates(distances)
pcocars=MixedBiplot(pcocars)
plot(pcocars, mode="s", PlotSupVars=TRUE, SupMode="s")
library(MultBiplotR)
data(mtcars)
mtcars$cyl=as.ordered(mtcars$cyl)
mtcars$gear=as.factor(mtcars$gear)
mtcars$vs=as.factor(mtcars$vs)
distances=GowerProximities(mtcars, Binary=9)
pcocars=PrincipalCoordinates(distances)
pcocars=MixedBiplot(pcocars)
plot(pcocars, mode="s", PlotSupVars=TRUE, SupMode="s")
source('~/Dropbox/0 ProgramasR/Paquetes/MultBiplotR/R/MixedBiplot.R')
source('~/Dropbox/0 ProgramasR/Paquetes/MultBiplotR/R/AddSupVars2Biplot.R')
source('~/Dropbox/0 ProgramasR/Paquetes/MultBiplotR/R/AddSupVars2Biplot.R')
source('~/Dropbox/0 ProgramasR/Paquetes/MultBiplotR/R/AddSupVars2Biplot.R')
source('~/Dropbox/0 ProgramasR/Paquetes/MultBiplotR/R/AddSupVars2Biplot.R')
source('~/Dropbox/0 ProgramasR/Paquetes/MultBiplotR/R/AddSupVars2Biplot.R')
source('~/Dropbox/0 ProgramasR/Paquetes/MultBiplotR/R/MixedBiplot.R')
setwd("~/Dropbox/Biotecnologia2017")
help(read.spss)
library(foreign)
help(read.spss)
read.spss("DatosTarea.sav")
read.spss("DatosTarea.sav", to.data.frame = TRUE)
datos=read.spss("DatosTarea.sav", to.data.frame = TRUE)
head(datos)
rownames(datos)
rownames(datos)=datos[[1]]
datos
dim(datos)
datos[[2]]
nombres=read.table("Nombres.txt")
nombres
nombres=read.table("Nombres.txt")
nombres
help(cbind)
cabecero=datos[,1:2]
cabecero
cabecero=datos[,1:3]
cabecero
ncol=dim(datos)[2]
genes=datos[,4:ncol]
genes
dim(genes)
set.seed(0)
setwd("~/Dropbox/Biotecnologia2017")
help("write.table")
write.foreign(datos, "mydata.txt", "mydata.sps",   package="SPSS")
write.table(datos, file="mydata.txt")
write.foreign(datos, "mydata.txt", "mydata.sps",   package="SPSS")
write.table(datos, file="/pepe/mydata.txt")
write.table(datos, file="pepe/mydata.txt")
write.table(datos, file="pepe/mydata.txt")
dir.create(pepe)
getwd()
maindir=getwd()
subDir="pepe"
dir.create(file.path(maindir, subDir))
write.table(datos, file="pepe/mydata.txt")
subDir="pepe/pepe"
dir.create(file.path(maindir, subDir))
i=1
subDir=paste("asignaciones/",nombres[i], sep="")
subDir
nombres=read.table("Nombres.txt")
nombres
nombres[i]
i=1
nombres(1)
nombres[1]
nombres[1,1]
nombres=as.character(read.table("Nombres.txt")9
set.seed(0)
maindir=getwd()
for (i in 1:length(nombres)){
subDir=paste("asignaciones/",nombres[i], sep="")
dir.create(file.path(maindir, subDir))
}
help("write.table")
require(foreign)
write.foreign(datos, "mydata.txt", "mydata.sps",   package="SPSS")
subDir="pepe/pepe"
dir.create(file.path(maindir, subDir))
write.table(datos, file="pepe/mydata.txt")
nombres=as.character(read.table("Nombres.txt")
set.seed(0)
maindir=getwd()
for (i in 1:length(nombres)){
subDir=paste("asignaciones/",nombres[i], sep="")
dir.create(file.path(maindir, subDir))
}
help("write.table")
require(foreign)
write.foreign(datos, "mydata.txt", "mydata.sps",   package="SPSS")
subDir="pepe/pepe"
dir.create(file.path(maindir, subDir))
write.table(datos, file="pepe/mydata.txt")
nombres=as.character(read.table("Nombres.txt"))
nombres
nombres=as.character(nombres[[1]])
nombres
nombres=read.table("Nombres.txt")
nombres
nombres[[1]]
as.character(nombres[[1]])
nombres=read.table("Nombres.txt")
nombres=as.character(nombres[[1]])
nombres
nombres[i]
dir.create(file.path(maindir, subDir))
subDir=paste("asignaciones/",nombres[i], sep="")
dir.create(file.path(maindir, subDir))
maindir
subDir
dir.create(file.path(maindir, subDir))
help(sample)
sample.int(ncol, size=10)
sample.int(ncol, size=10)
sample.int(ncol, size=10)
nalumnos=length(nombres)
nalumnos
samples=matrix(0,nalumnos, 10)
samples=matrix(0,nalumnos, 10)
for (i in 1:length(nombres)){
subDir=paste("asignaciones/",nombres[i], sep="")
dir.create(file.path(maindir, subDir))
help(sample)
samples[i,] =sample.int(ncol, size=10)
}
samples
misdatos=genes(, muestra)
misdatos=genes[, muestra]
muestra = sample.int(ncol, size=10)
samples[i,] = muestra
misdatos=genes[, muestra]
for (i in 1:length(nombres)){
subDir=paste("asignaciones/",nombres[i], sep="")
dir.create(file.path(maindir, subDir))
muestra = sample.int(ncol, size=10)
samples[i,] = muestra
misdatos=genes[, muestra]
}
muestra = sample.int(ncol, size=10)
muestra
samples[i,] = muestra
misdatos=genes[, muestra]
misdatos
misdatos=cbind(cabecero, genes[, muestra])
misdatos
datosSPSS=paste(subDir,"/misdatos.txt")
sintaxSPSS=paste(subDir,"/misdatos.sps")
subDir=paste("asignaciones/",nombres[i], sep="")
dir.create(file.path(maindir, subDir))
muestra = sample.int(ncol, size=10)
samples[i,] = muestra
misdatos=cbind(cabecero, genes[, muestra])
datosSPSS=paste(subDir,"/misdatos.txt")
sintaxSPSS=paste(subDir,"/misdatos.sps")
write.foreign(misdatos, datosSPSS, sintaxSPSS,   package="SPSS")
datosSPSS=paste(subDir,"/misdatos.txt", sep="")
sintaxSPSS=paste(subDir,"/misdatos.sps", sep="")
write.foreign(misdatos, datosSPSS, sintaxSPSS,   package="SPSS")
i=1
subDir=paste("asignaciones/",nombres[i], sep="")
dir.create(file.path(maindir, subDir))
muestra = sample.int(ncol, size=10)
samples[i,] = muestra
misdatos=cbind(cabecero, genes[, muestra])
datosSPSS=paste(subDir,"/misdatos.txt", sep="")
sintaxSPSS=paste(subDir,"/misdatos.sps", sep="")
write.foreign(misdatos, datosSPSS, sintaxSPSS,   package="SPSS")
write.table
help("write.table")
tabla=paste(subDir,"/mitabla.txt", sep="")
write.table(datos, file=tabla, dec=",")
i
subDir=paste("asignaciones/",nombres[i], sep="")
dir.create(file.path(maindir, subDir))
muestra = sample.int(ncol, size=10)
samples[i,] = muestra
misdatos=cbind(cabecero, genes[, muestra])
datosSPSS=paste(subDir,"/datosSPSS.txt", sep="")
sintaxSPSS=paste(subDir,"/sintaxisSPSS.sps", sep="")
write.foreign(misdatos, datosSPSS, sintaxSPSS,   package="SPSS")
tabla=paste(subDir,"/mitabla.txt", sep="")
write.table(datos, file=tabla, dec=",", row.names=FALSE)
as.integer(cabecero[,2])
cabecero=cbind(cabecero, as.integer(cabecero[,2]), as.integer(cabecero[,3]))
cabecero
colnames(cabecero)
varnames=colnames(cabecero)
varnames[4]=Melanoma_Num
varnames
varnames[4]="Melanoma_Num"
varnames
varnames[5]="Tissue_Num"
varnames
colnames(cabecero)=varnames
cabecero
install.packages("xlsx")
library(xlsx)
write.xlsx(misdatos, excel)
library(xlsx)
library("xlsxjars", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
write.xlsx(misdatos, excel)
detach("package:xlsx", unload=TRUE)
detach("package:xlsxjars", unload=TRUE)
install.packages("WriteXLS")
library("WriteXLS", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
cabecero
WriteXLS(misdatos, ExcelFileName= excel)
excel=paste(subDir,"/datosExcel.xlsx", sep="")
WriteXLS(misdatos, ExcelFileName= excel)
samples
rownames(samples)=nombres
samples
colnames(samples)=paste("Gen", 1:10)
samples
#  Preparación de la tarea de Biotecnología
# Leer datos SPSS
library(foreign)
library(WriteXLS)
help(read.spss)
datos=read.spss("DatosTarea.sav", to.data.frame = TRUE)
head(datos)
rownames(datos)=datos[[1]]
cabecero=datos[,1:3]
cabecero=cbind(cabecero, as.integer(cabecero[,2]), as.integer(cabecero[,3]))
varnames=colnames(cabecero)
varnames[4]="Melanoma_Num"
varnames[5]="Tissue_Num"
colnames(cabecero)=varnames
ncol=dim(datos)[2]
genes=datos[,4:ncol]
# Leer Nombres de los alumnos
nombres=read.table("Nombres.txt")
nombres=as.character(nombres[[1]])
nalumnos=length(nombres)
set.seed(0)
maindir=getwd()
samples=matrix(0,nalumnos, 10)
for (i in 1:length(nombres)){
subDir=paste("asignaciones/",nombres[i], sep="")
dir.create(file.path(maindir, subDir))
muestra = sample.int(ncol, size=10)
samples[i,] = muestra
misdatos=cbind(cabecero, genes[, muestra])
datosSPSS=paste(subDir,"/datosSPSS.txt", sep="")
sintaxSPSS=paste(subDir,"/sintaxisSPSS.sps", sep="")
write.foreign(misdatos, datosSPSS, sintaxSPSS,   package="SPSS")
tabla=paste(subDir,"/TablaDatos.txt", sep="")
write.table(misdatos, file=tabla, dec=",", row.names=FALSE)
excel=paste(subDir,"/datosExcel.xlsx", sep="")
WriteXLS(misdatos, ExcelFileName= excel)
}
rownames(samples)=nombres
colnames(samples)=paste("Gen", 1:10)
samples=samples+3
WriteXLS(samples, ExcelFileName= "AsignacionesExcel")
cabecero
genes
muestra
genes[, muestra]
muestra
genes[, muestra]
class(genes)
class(muestra)
samples
for (i in 1:length(nombres)){
subDir=paste("asignaciones/",nombres[i], sep="")
dir.create(file.path(maindir, subDir))
muestra = sample.int(ncol, size=10)
samples[i,] = muestra
misdatos=cbind(cabecero, genes[, muestra])
datosSPSS=paste(subDir,"/datosSPSS.txt", sep="")
sintaxSPSS=paste(subDir,"/sintaxisSPSS.sps", sep="")
write.foreign(misdatos, datosSPSS, sintaxSPSS,   package="SPSS")
tabla=paste(subDir,"/TablaDatos.txt", sep="")
write.table(misdatos, file=tabla, dec=",", row.names=FALSE)
excel=paste(subDir,"/datosExcel.xlsx", sep="")
WriteXLS(misdatos, ExcelFileName= excel)
}
#  Preparación de la tarea de Biotecnología
# Leer datos SPSS
library(foreign)
library(WriteXLS)
help(read.spss)
datos=read.spss("DatosTarea.sav", to.data.frame = TRUE)
head(datos)
rownames(datos)=datos[[1]]
cabecero=datos[,1:3]
cabecero=cbind(cabecero, as.integer(cabecero[,2]), as.integer(cabecero[,3]))
varnames=colnames(cabecero)
varnames[4]="Melanoma_Num"
varnames[5]="Tissue_Num"
colnames(cabecero)=varnames
ncol=dim(datos)[2]
genes=datos[,4:ncol]
ncol=dim(genes)[2]
# Leer Nombres de los alumnos
nombres=read.table("Nombres.txt")
nombres=as.character(nombres[[1]])
nalumnos=length(nombres)
set.seed(0)
maindir=getwd()
samples=matrix(0,nalumnos, 10)
for (i in 1:length(nombres)){
subDir=paste("asignaciones/",nombres[i], sep="")
dir.create(file.path(maindir, subDir))
muestra = sample.int(ncol, size=10)
samples[i,] = muestra
misdatos=cbind(cabecero, genes[, muestra])
datosSPSS=paste(subDir,"/datosSPSS.txt", sep="")
sintaxSPSS=paste(subDir,"/sintaxisSPSS.sps", sep="")
write.foreign(misdatos, datosSPSS, sintaxSPSS,   package="SPSS")
tabla=paste(subDir,"/TablaDatos.txt", sep="")
write.table(misdatos, file=tabla, dec=",", row.names=FALSE)
excel=paste(subDir,"/datosExcel.xlsx", sep="")
WriteXLS(misdatos, ExcelFileName= excel)
}
rownames(samples)=nombres
colnames(samples)=paste("Gen", 1:10)
samples=samples+3
WriteXLS(samples, ExcelFileName= "AsignacionesExcel")
WriteXLS(samples, ExcelFileName= "AsignacionesExcel.xlsx")
samples=as.data.frame(samples)
WriteXLS(samples, ExcelFileName= "AsignacionesExcel.xlsx")
samples
help(WriteXLS)
WriteXLS(samples, ExcelFileName= "AsignacionesExcel.xlsx", row.names=TRUE)
source('~/Dropbox/0 ProgramasR/Paquetes/MultBiplotR/R/AddSupVars2Biplot.R')
source('~/Dropbox/0 ProgramasR/Paquetes/MultBiplotR/R/AddSupVars2Biplot.R')
source('~/Dropbox/0 ProgramasR/Paquetes/MultBiplotR/R/MixedBiplot.R')
library(MultBiplotR)
library(MultBiplotR)
data(wine)
wine2=wine[-c(1,3)]
model <- glm(Origin ~ .,family=binomial(link='logit'), data=wine2)
summary(model)
fit=RidgeBinaryLogistic(y,X, penalization=0.1)
summary(fit)
fit=RidgeBinaryLogistic(y,X, penalization=0.1)
y
y=as.numeric(wine[,1])-1
fit=RidgeBinaryLogistic(y,X, penalization=0.1)
summary(fit)
X=as.matrix(wine[,4:21])
y=as.numeric(wine[,1])-1
fit=RidgeBinaryLogistic(y,X, penalization=0.1)
summary(fit)
fit=RidgeBinaryLogistic(y,X, penalization=0.3)
summary(fit)
wine
y=as.numeric(wine[,2])-1
fit=RidgeBinaryLogistic(y,X, penalization=0.3)
summary(fit)
fit=RidgeBinaryLogistic(y,X, penalization=1)
summary(fit)
fit=RidgeBinaryLogistic(y,X, penalization=5)
summary(fit)
X=as.matrix(wine[,4:21])
colnames(X)= colnames(wine[,4:21])
y=as.numeric(wine[,1])-1
y=as.numeric(wine[,2])-1
PLSwine=PLSRfit(y, X, S=3)
winePLSbip=Biplot.PLSR(PLSwine)
plot(winePLSbip,  ColorInd=y+2, IndLabels= wine[,2], mode="s", MinQualityVar=0, PlotSupVars=T, SupMode="s", ShowBox=T)
winePLSbip=Biplot.PLSR(PLSwine, Algorithm=2)
plot(winePLSbip,  ColorInd=y+2, IndLabels= wine[,2], mode="s", MinQualityVar=0, PlotSupVars=T, SupMode="s", ShowBox=T)
PLSwine=PLSRfit(y, X, S=3, Algorithm=2)
library(MultBiplotR)
PLSwine=PLSRfit(y, X, S=3, Algorithm=2)
PLSwine=PLSR1BinFitPrueba2(y, X, S=2,penalization = 0.01, cte=TRUE, Algorithm=2)
PLSwine=PLSR1BinFit(y, X, S=2,penalization = 0.01, cte=TRUE, Algorithm=2)
PLSwine=PLSR1BinFit(y, X, S=2,penalization = 0.01, cte=TRUE, Algorithm=2)
PLSwine=PLSR1BinFit(y, X, S=2,penalization = 0.01, cte=TRUE, Algorithm=2)
PLSwine=PLSR1BinFit(y, X, S=2,penalization = 0.01, cte=TRUE)
summary(PLSwine$BinaryFit)
PLSR1BinFit
library(MultBiplotR)
PLSwine=PLSR1BinFit(y, X, S=2,penalization = 0.01, cte=TRUE)
PLSwine=PLSR1BinFit(y, X, S=2,penalization = 0.01, cte=TRUE, Algorithm=2)
PLSR1BinFit
library(MultBiplotR)
PLSR1BinFit
library(MultBiplotR)
PLSR1BinFit
library(MultBiplotR)
PLSR1BinFit
