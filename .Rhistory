CategoryNames=list()
for (j in 1:p)
CategoryNames[[j]]=levels(Y[[j]])
names(CategoryNames)=VarNames
CategoryNames
logLik = 0
for (j in 1:p) {
if (show) cat(" ", j)
model = RidgeOrdinalLogistic(Y[, j]), a, tol = tolerance, maxiter = maxiter,
penalization = penalization, show = FALSE)
par$coefficients[j, ] = model$coefficients
par$thresholds[j, 1:nrow(model$thresholds)] = model$thresholds
par$fit[j, 1] = model$logLik
par$fit[j, 2] = model$Deviance
par$fit[j, 3] = model$df
par$fit[j, 4] = model$pval
par$fit[j, 5] = model$PercentClasif
par$fit[j, 6] = model$CoxSnell
par$fit[j, 7] = model$MacFaden
par$fit[j, 8] = model$Nagelkerke
par$fit[j, 9] = model$DevianceNull
logLik = logLik + model$logLik
}
j
model = RidgeOrdinalLogistic(Y[, j]), a, tol = tolerance, maxiter = maxiter,
penalization = penalization, show = FALSE)
model = RidgeOrdinalLogistic(Y[, j]), a, tol = tolerance, maxiter = maxiter,
penalization = penalization, show = FALSE)
model = RidgeOrdinalLogistic(Y[, j]), a, tol = tolerance, maxiter = maxiter, penalization = penalization, show = FALSE)
Y[, j])
model = RidgeOrdinalLogistic(Y[, j], a, tol = tolerance, maxiter = maxiter, penalization = penalization, show = FALSE)
a = SD$u[,1:dim] %*% diag(SD$d[1:dim])
freq = matrix(1, n, 1)
par = list()
par$coefficients = array(0, c(p, dim))
par$thresholds = array(0, c(p, Maxcat - 1))
par$fit = array(0, c(p, 9))
dimnames(par$fit)[[1]] = dimnames(x)[[2]][1:dim(x)[2]]
dimnames(par$fit)[[2]] = c("logLik", "Deviance", "df", "p-value",
"PCC", "CoxSnell", "Macfaden", "Nagelkerke", "NullDeviance")
logLik = 0
for (j in 1:p) {
if (show) cat(" ", j)
model = RidgeOrdinalLogistic(Y[, j], a, tol = tolerance, maxiter = maxiter, penalization = penalization, show = FALSE)
par$coefficients[j, ] = model$coefficients
par$thresholds[j, 1:nrow(model$thresholds)] = model$thresholds
par$fit[j, 1] = model$logLik
par$fit[j, 2] = model$Deviance
par$fit[j, 3] = model$df
par$fit[j, 4] = model$pval
par$fit[j, 5] = model$PercentClasif
par$fit[j, 6] = model$CoxSnell
par$fit[j, 7] = model$MacFaden
par$fit[j, 8] = model$Nagelkerke
par$fit[j, 9] = model$DevianceNull
logLik = logLik + model$logLik
}
show=FALSE
logLik = 0
for (j in 1:p) {
if (show) cat(" ", j)
model = RidgeOrdinalLogistic(Y[, j], a, tol = tolerance, maxiter = maxiter, penalization = penalization, show = FALSE)
par$coefficients[j, ] = model$coefficients
par$thresholds[j, 1:nrow(model$thresholds)] = model$thresholds
par$fit[j, 1] = model$logLik
par$fit[j, 2] = model$Deviance
par$fit[j, 3] = model$df
par$fit[j, 4] = model$pval
par$fit[j, 5] = model$PercentClasif
par$fit[j, 6] = model$CoxSnell
par$fit[j, 7] = model$MacFaden
par$fit[j, 8] = model$Nagelkerke
par$fit[j, 9] = model$DevianceNull
logLik = logLik + model$logLik
}
a
a = SD$u[,1:dim] %*% diag(SD$d[1:dim])
dim=2
a = SD$u[,1:dim] %*% diag(SD$d[1:dim])
freq = matrix(1, n, 1)
par = list()
par$coefficients = array(0, c(p, dim))
par$thresholds = array(0, c(p, Maxcat - 1))
par$fit = array(0, c(p, 9))
Ncats = apply(x,2,max)
Maxcat = max(Ncats)
par$thresholds = array(0, c(p, Maxcat - 1))
par$fit = array(0, c(p, 9))
Ncats = apply(x,2,max)
Ncats=repeat(0,p)
repeat(0,p)
Ncats=matrix(0,p,1)
for (j in 1:p){
CategoryNames[[j]]=levels(Y[[j]])
Ncats[j]= length(CategoryNames[[j]])
}
Ncats
Maxcat = max(Ncats)
Maxcat = max(Ncats)
par = list()
par$coefficients = array(0, c(p, dim))
par$thresholds = array(0, c(p, Maxcat - 1))
par$fit = array(0, c(p, 9))
dimnames(par$fit)[[1]] = dimnames(x)[[2]][1:dim(x)[2]]
dimnames(par$fit)[[1]] = dimnames(Y)[[2]][1:dim(Y)[2]]
dimnames(par$fit)[[2]] = c("logLik", "Deviance", "df", "p-value",
"PCC", "CoxSnell", "Macfaden", "Nagelkerke", "NullDeviance")
logLik = 0
for (j in 1:p) {
if (show) cat(" ", j)
model = RidgeOrdinalLogistic(Y[, j], a, tol = tolerance, maxiter = maxiter, penalization = penalization, show = FALSE)
par$coefficients[j, ] = model$coefficients
par$thresholds[j, 1:nrow(model$thresholds)] = model$thresholds
par$fit[j, 1] = model$logLik
par$fit[j, 2] = model$Deviance
par$fit[j, 3] = model$df
par$fit[j, 4] = model$pval
par$fit[j, 5] = model$PercentClasif
par$fit[j, 6] = model$CoxSnell
par$fit[j, 7] = model$MacFaden
par$fit[j, 8] = model$Nagelkerke
par$fit[j, 9] = model$DevianceNull
logLik = logLik + model$logLik
}
rownames(par$coefficients) = VarNames
colnames(par$coefficients) = paste("Dim_",1:dim,sep="")
rownames(par$thresholds) = VarNames
colnames(par$thresholds) = paste("C_",1:(Maxcat-1),sep="")
d = sqrt(rowSums(par$coefficients^2) + 1)
loadings = solve(diag(d)) %*% par$coefficients
thresholds = solve(diag(d)) %*% par$thresholds
r2 = rowSums(loadings^2)
model = list()
model$Title="Ordinal Logistic Biplot (EM)"
if (maxiter>0) model$Type="Internal"
else model$Type="External"
if (maxiter>0) model$Fit="EM (Alternated Expectation-Maximization)"
else model$Fit="Ordinal Logistic Regression fitted to a External Configuration"
model$InitialConfiguration=initial
model$Penalization=penalization
model$NumberIterations=iter
model$CategoryNames=CategoryNames
model$RowCoordinates = ability
model = list()
model$Title="Constrained Ordinal Logistic Biplot"
model$Type="Constrained"
model$Fit="Ordinal Logistic Regression"
model$Penalization=penalization
model$NumberIterations=1
model$CategoryNames=CategoryNames
model$RowCoordinates = a
rownames(model$RowCoordinates)=RowNames
colnames(model$RowCoordinates)=paste("Dim_",1:dim,sep="")
model$RowCoordinates
model$RowContributions=matrix(100/dim,nrow,dim)
model$RowContributions=matrix(100/dim,n,dim)
rownames(model$RowContributions)=RowNames
colnames(model$RowContributions)=paste("Dim_",1:dim,sep="")
model$ColumnParameters = par
model$ColCoordinates = par$coefficients
model$loadings = loadings
rownames(model$loadings)=VarNames
model$Communalities = matrix(r2, ncol,1)
model$Communalities = matrix(r2, p,1)
rownames(model$Communalities)=VarNames
colnames(model$Communalities)="Communalities"
model$ColContributions = loadings^2
rownames(model$ColContributions)=VarNames
model$LogLikelihood = logLik
model$Ncats = Ncats
model$DevianceNull=sum(par$fit[,9])
model$Deviance=sum(par$fit[,2])
model$df=sum(par$fit[,3])
model$Dif = (model$DevianceNull - model$Deviance)
model$pval = 1 - pchisq(model$Dif, df = model$df)
model$CoxSnell = 1 - exp(-1 * model$Dif/(nrow*ncol))
model$Nagelkerke = model$CoxSnell/(1 - exp((model$DevianceNull/(-2)))^(2/(n*p)))
model$MacFaden = 1 - (model$Deviance/model$DevianceNull)
class(model) = "Ordinal.Logistic.Biplot"
model$AIC=-2*model$LogLikelihood + 2 * model$df
model$BIC=-2*model$LogLikelihood + model$df * log(n*p)
model=AddContVars2Biplot(model,  X, dims=dim, Scaling = Scaling)
library(MultBiplotR)
model=AddContVars2Biplot(model,  X, dims=dim, Scaling = Scaling)
Scaling=5
model=AddContVars2Biplot(model,  X, dims=dim, Scaling = Scaling)
plot(model)
ordbip=OrdLogBipEM(Drugs, X, show=TRUE)
ordbip=ConstrainedOrdinalLogisticBiplot(Drugs, X, show=TRUE)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/ConstrainedOrdinalLogisticBiplot.R')
conordbip=ConstrainedOrdinalLogisticBiplot(Drugs, X, show=TRUE)
nrow
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/ConstrainedOrdinalLogisticBiplot.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/ConstrainedOrdinalLogisticBiplot.R')
conordbip=ConstrainedOrdinalLogisticBiplot(Drugs, X, show=TRUE)
summary(conordbip)
ordbip=AddCluster2Biplot(ordbip, ClusterType = "us", Groups = Drugs[[4]])
conordbip=AddCluster2Biplot(conordbip, ClusterType = "us", Groups = Drugs[[4]])
plot(conordbip,LabelInd=FALSE, CexInd=0.2, CexVar=0.5, PchInd=16, mode="s", PlotClus=TRUE, ClustCenters=TRUE, PlotSupVars=TRUE)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/0 Machine Learning/Ejemplos Nuevos/WineQuality")
Wine=read.csv("winequality-red.csv", header=TRUE)
View(Wine)
library(MultBiplotR)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/0 Machine Learning/0 Machine Learning DATOS/Drug Consumption")
datos=read.csv(file="drug_consumption.data.txt", header=FALSE)
names(datos)<-c("ID", "Age", "Gender", "Education", "Country", "Ethnicity", "Neuroticism", "Extraversion", "Openness", "Agreeableness", "Conscientiousness", "Impulsiveness", "SS",
"Alcohol", "Amphetamines", "Popers", "benzodiazepine", "Caffeine", "Cannabis", "Chocolate", "Cocaine", "Crack", "Ecstasy", "Heroin", "Ketamine", "Legal_Highs",
"LSD", "Methadone", "Magic-Mushrooms", "Nicotine", "Semeron", "VSA")
datos=datos[,-1]
summary(datos)
dim(datos)
Predictors=datos[,7:12]
colnames(Predictors)=abbreviate(colnames(Predictors))
Drugs=datos[,c(13:29,31)]
colnames(Drugs)=abbreviate(colnames(Drugs))
Drugs
BinaryDrugs=matrix(1-as.numeric((Drugs=="CL0")|(Drugs=="CL1")|(Drugs=="CL2")), dim(Drugs))
colnames(BinaryDrugs)=colnames(Drugs)
Y=BinaryDrugs
X=Predictors
Biplot=ConstrainedLogisticBiplot(Y,X,penalization=1)
plot(Biplot, RowCex=0.2, PchRows=16)
summary(Biplot)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/ConstrainedLogisticBiplot.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/ConstrainedLogisticBiplot.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/ConstrainedLogisticBiplot.R')
Biplot=ConstrainedLogisticBiplot(Y,X,penalization=1)
plot(Biplot, RowCex=0.2, PchRows=16)
summary(Biplot)
spiders
as.numeric(spiders)
spiders
SpidersSp
SpidersSp>0
as.numeric(SpidersSp>0)
n=nrow(SpidersSp)
n=ncol(SpidersSp)
n=nrow(SpidersSp)
p=ncol(SpidersSp)
matrix(as.numeric(SpidersSp>0), n, p)
Y=matrix(as.numeric(SpidersSp>0), n, p)
SpidersEnv
X=SpidersEnv
Biplot=ConstrainedLogisticBiplot(Y,X,penalization=1)
plot(Biplot, RowCex=0.2, PchRows=16)
summary(Biplot)
plot(Biplot, RowCex=0.5, PchRows=16)
Yh = InitialTransform(Yh, transform = 5)$X
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/ConstrainedLogisticBiplot.R')
Biplot=ConstrainedLogisticBiplot(Y,X,penalization=1)
plot(Biplot, RowCex=0.5, PchRows=16)
SpidersSp
rownames(Y)=rownames(SpidersSp)
colnames(Y)=colnames(SpidersSp)
X=SpidersEnv
Biplot=ConstrainedLogisticBiplot(Y,X,penalization=1)
plot(Biplot, RowCex=0.5, PchRows=16)
summary(Biplot)
X
Biplot$RowCoordinates
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/ConstrainedLogisticBiplot.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/ConstrainedLogisticBiplot.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/ConstrainedLogisticBiplot.R')
n=nrow(SpidersSp)
p=ncol(SpidersSp)
Y=matrix(as.numeric(SpidersSp>0), n, p)
rownames(Y)=rownames(SpidersSp)
colnames(Y)=colnames(SpidersSp)
X=SpidersEnv
Biplot=ConstrainedLogisticBiplot(Y,X,penalization=1)
plot(Biplot, RowCex=0.5, PchRows=16)
summary(Biplot)
plot(Biplot, RowCex=0.8, PchRows=16)
Biplot$ContSupVarsBiplot
Biplot$ContSupVarsBiplot$R2
xtable(Biplot$ContSupVarsBiplot$R2)
library(xtable)
xtable(Biplot$ContSupVarsBiplot$R2)
class(Biplot$ContSupVarsBiplot$R2)
as.matrix(Biplot$ContSupVarsBiplot$R2, nrow=1)
as.matrix(Biplot$ContSupVarsBiplot$R2, nrows=1)
help("matrix")
matrix(Biplot$ContSupVarsBiplot$R2, nrows=1)
matrix(Biplot$ContSupVarsBiplot$R2, nrow=1)
A=matrix(Biplot$ContSupVarsBiplot$R2, nrow=1)
colnames(A)=names(Biplot$ContSupVarsBiplot$R2)
A=matrix(Biplot$ContSupVarsBiplot$R2, nrow=1)
colnames(A)=names(Biplot$ContSupVarsBiplot$R2)
A
rownames(A)="R2"
xtable(A)
xtable(A, caption="R-squared for the environmental variables")
help("Spiders")
SpidersSp
help(SpidersSp)
Y=matrix(as.numeric(SpidersSp>0), n, p)
rownames(Y)=rownames(SpidersSp)
colnames(Y)=colnames(SpidersSp)
Y
xtable(Y)
xtable(Y, caption="Presence/Absence data")
colnames(Y)=abbreviate(colnames(SpidersSp))
xtable(Y, caption="Presence/Absence data")
xtable(X, caption="Environmental data")
n=nrow(SpidersSp)
p=ncol(SpidersSp)
Y=matrix(as.numeric(SpidersSp>0), n, p)
rownames(Y)=rownames(SpidersSp)
colnames(Y)=abbreviate(colnames(SpidersSp))
X=SpidersEnv
Biplot2=BinaryLogBiplotGD(Y, penalization = 0.000005)
summary(Biplot2)
Biplot2=BinaryLogBiplotGD(Y, penalization = 0)
summary(Biplot2)
Biplot2=BinaryLogBiplotGD(Y, penalization = 0.1)
summary(Biplot2)
Biplot2=AddContVars2Biplot(Biplot2,  X, dims=2, Scaling = 5)
plot(Biplot2, RowCex=0.2, PchRows=16, margin=0)
Biplot2=BinaryLogBiplotGD(Y, penalization = 0.1)
summary(Biplot2)
plot(Biplot2, RowCex=0.2, PchRows=16, margin=0)
Biplot2=AddContVars2Biplot(Biplot2,  X, dims=2, Scaling = 5)
Biplot2=BinaryLogBiplotGD(Y, penalization = 0.1)
summary(Biplot2)
plot(Biplot2, RowCex=0.2, PchRows=16, margin=0)
blhap=BinaryLogBiplotGD(BinaryDrugs, Algorithm = "Alternated", tolerance = 1e-03, RotVarimax = TRUE, seed=0, penalization=0.1)
blhap=BinaryLogBiplotGD(BinaryDrugs, Algorithm = "Joint", tolerance = 1e-03, RotVarimax = TRUE, seed=0, penalization=0.1)
blhap=BinaryLogBiplotGD(BinaryDrugs, Algorithm = "Joint", tolerance = 1e-03, RotVarimax = FALSE, seed=0, penalization=0.1)
Biplot2=BinaryLogBiplotGD(Y, penalization = 0.1)
summary(Biplot2)
Biplot2=BinaryLogBiplotGD(Y, penalization = 0.1, seed=0)
summary(Biplot2)
Biplot2=AddContVars2Biplot(Biplot2,  X, dims=2, Scaling = 5)
plot(Biplot2, RowCex=0.2, PchRows=16, margin=0)
Biplot2=BinaryLogBiplotGD(Y, penalization = 0.1, seed=0)
plot(Biplot2, RowCex=0.2, PchRows=16, margin=0)
Biplot2=BinaryLogBiplotGD(Y, penalization = 0.1, seed=0)
plot(Biplot2, RowCex=0.2, PchRows=16, margin=0)
Biplot2=BinaryLogBiplotGD(Y, penalization = 0.1, seed=0)
plot(Biplot2, RowCex=0.2, PchRows=16, margin=0)
plot(Biplot2, RowCex=0.6, PchRows=16, margin=0)
Biplot=ConstrainedLogisticBiplot(Y,X,penalization=1)
plot(Biplot, RowCex=0.8, PchRows=16)
summary(Biplot)
attributes(Biplot)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/summary.Binary.Logistic.Biplot.R')
summary(Biplot2, Latex=TRUE)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/summary.Binary.Logistic.Biplot.R')
summary(Biplot, Latex=TRUE)
xtable(RR, caption="Columns Fit")
object=Biplot2
RR=cbind(object$Deviances, object$Dfs, object$pvalues, object$Nagelkerke, object$CoxSnell, object$MacFaden, object$PercentsCorrec*100, object$Sensitivity*100, object$Specificity*100)
colnames(RR)=c("Deviance", "D.F", "P-val", "Nagelkerke", "Cox-Snell", "MacFaden", "% Correct", "Sensitivity", "Specificity")
rownames(RR)=rownames(object$ColumnParameters)
Total=c(object$DevianceTotal, object$TotalDf, object$p, object$TotNagelkerke, object$TotCoxSnell, object$TotMacFaden, object$TotalPercent*100, object$TotalSensitivity*100, object$TotalSpecificity*100)
RR=rbind(RR,Total)
print(RR)
xtable(RR, caption="Columns Fit")
LO=cbind(object$Tresholds, object$Loadings, object$Communalities)
colnames(LO)=c("Thresholds", paste("Dim",1:dims,sep=""), "Communalities")
rownames(LO)=rownames(object$ColumnParameters)
print(LO)
xtable(LO, caption="Factor Model")
object=Biplot
RR=cbind(object$Deviances, object$Dfs, object$pvalues, object$Nagelkerke, object$CoxSnell, object$MacFaden, object$PercentsCorrec*100, object$Sensitivity*100, object$Specificity*100)
colnames(RR)=c("Deviance", "D.F", "P-val", "Nagelkerke", "Cox-Snell", "MacFaden", "% Correct", "Sensitivity", "Specificity")
rownames(RR)=rownames(object$ColumnParameters)
Total=c(object$DevianceTotal, object$TotalDf, object$p, object$TotNagelkerke, object$TotCoxSnell, object$TotMacFaden, object$TotalPercent*100, object$TotalSensitivity*100, object$TotalSpecificity*100)
RR=rbind(RR,Total)
print(RR)
xtable(RR, caption="Columns Fit")
LO=cbind(object$Tresholds, object$Loadings, object$Communalities)
colnames(LO)=c("Thresholds", paste("Dim",1:dims,sep=""), "Communalities")
rownames(LO)=rownames(object$ColumnParameters)
print(LO)
LO
c("Thresholds", paste("Dim",1:dims,sep=""), "Communalities")
dims=2
colnames(LO)=c("Thresholds", paste("Dim",1:dims,sep=""), "Communalities")
print(LO)
xtable(LO, caption="Factor Model")
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/summary.Binary.Logistic.Biplot.R')
library(MultBiplotR)
X=wine[,4:21]
Y=Factor2Binary(wine$Group)
rownames(Y)=rownames(X)
Biplot=ConstrainedLogisticBiplot(Y,X)
help("plot.External.Binary.Logistic.Biplot")
Biplot=AddCluster2Biplot(Biplot, Groups=wine$Group,ClusterType = "us")
plot(Biplot, RowColors=as.numeric(wine$Group), PlotClus=TRUE)
summary(Biplot)
summary(Biplot, Latex=TRUE)
library(xtable)
summary(Biplot, Latex=TRUE)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/summary.Binary.Logistic.Biplot.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/summary.Binary.Logistic.Biplot.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/summary.Binary.Logistic.Biplot.R')
summary(Biplot, Latex=TRUE)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/summary.Binary.Logistic.Biplot.R')
summary(Biplot, Latex=TRUE)
library(vegan)
help("rda")
plot(dune.Manure)
data(dune)
data(dune.env)
dune.Manure <- rda(dune ~ Manure, dune.env)
plot(dune.Manure)
dune
dune.env
SpidersRDA <- rda(SpidersSp ~ SpidersEnv)
SpidersRDA <- rda(SpidersSp ~.,  SpidersEnv)
plot(SpidersRDA)
summary(SpidersRDA)
n=nrow(SpidersSp)
p=ncol(SpidersSp)
Y=matrix(as.numeric(SpidersSp>0), n, p)
rownames(Y)=rownames(SpidersSp)
colnames(Y)=abbreviate(colnames(SpidersSp))
X=SpidersEnv
Biplot2=BinaryLogBiplotGD(Y, penalization = 0.1, seed=0)
plot(Biplot2, RowCex=0.6, PchRows=16, margin=0)
summary(Biplot2, Latex=TRUE)
Biplot2=AddContVars2Biplot(Biplot2,  X, dims=2, Scaling = 5)
plot(Biplot2, RowCex=0.7, PchRows=16, margin=0)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/plot.ContSupVarsBiplot.R')
plot(Biplot2, RowCex=0.7, PchRows=16, margin=0)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/plot.Supplementary.Variables.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/plot.ContSupVarsBiplot.R')
plot(Biplot2, RowCex=0.7, PchRows=16, margin=0)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/plot.Binary.Logistic.Biplot.R')
plot(Biplot2, RowCex=0.7, PchRows=16, margin=0)
Biplot2$ContSupVarsBiplot
Biplot2$ContSupVarsBiplot$R2
xtable(Biplot2$ContSupVarsBiplot$R2)
as.matrix(Biplot2$ContSupVarsBiplot$R2)
as.matrix(Biplot2$ContSupVarsBiplot$R2, nrow=1)
matrix(Biplot2$ContSupVarsBiplot$R2, nrow=1)
R2=matrix(Biplot2$ContSupVarsBiplot$R2, nrow=1)
colnames(R2)=names(Biplot2$ContSupVarsBiplot$R2)
rownames(R2)="R2"
R2
xtable(R2)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/ConstrainedLogisticBiplot.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/ConstrainedLogisticBiplot.R')
n=nrow(SpidersSp)
p=ncol(SpidersSp)
Y=matrix(as.numeric(SpidersSp>0), n, p)
rownames(Y)=rownames(SpidersSp)
colnames(Y)=abbreviate(colnames(SpidersSp))
X=SpidersEnv
Biplot=ConstrainedLogisticBiplot(Y,X,penalization=1)
plot(Biplot, RowCex=0.8, PchRows=16)
summary(Biplot, Latex=TRUE)
summary(Biplot, Latex=TRUE)
plot(Biplot, RowCex=0.8, PchRows=16, PlotSupVars = FALSE)
plot(Biplot, RowCex=0.8, PchRows=16)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/plot.Supplementary.Variables.R')
install.packages("nlme", lib="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages("lme4", lib="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(nlme)
help("lme")
install.packages("SASmixed", lib="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(lme4)
help("lmer")
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/PLSR1Bin.R')
heart <- read.csv("~/AnacondaProjects/heartdisease/HeartTransf.csv")
y=heart$target
heart[,("target")]
names(heart)
X=heart[,-c(1,8)]
names(X)
gfit1=glm(target~., data=heart[,-1], family=binomial)
summary(gfit1)
library(MultBiplotR)
fit=RidgeBinaryLogistic(y,X, penalization = 0)
summary(fit)
PLSheart=PLSRBin(y, X, S=2,penalization = 0.1)
PLSheart=PLSR1Bin(y, X, S=2,penalization = 0.1)
summary(PLSheart)
PLSheart=Biplot.PLSR1BIN(PLSheart)
plot(PLSheart)
plot(PLSheart, type="s")
plot(PLSheart, mode="s")
plot(PLSheart, mode="s", ColorInd=y+1)
PLSheart=PLSR1Bin(y, X, S=2,penalization = 0.1, InitTransform = 1)
summary(PLSheart)
PLSheart=Biplot.PLSR1BIN(PLSheart)
plot(PLSheart, mode="s", ColorInd=y+1)
PLSheart=PLSR1Bin(y, X, S=3,penalization = 0.1, InitTransform = 1)
summary(PLSheart)
PLSheart=PLSR1Bin(y, X, S=4,penalization = 0.1, InitTransform = 1)
summary(PLSheart)
help("abbreviate")
colnames(X)
colnames(X)=abbreviate(colnames(X))
colnames(X)
PLSheart=PLSR1Bin(y, X, S=4,penalization = 0.1, InitTransform = 1)
summary(PLSheart)
PLSheart=Biplot.PLSR1BIN(PLSheart)
plot(PLSheart, mode="s", ColorInd=y+1)
plot(PLSheart, mode="s", ColorInd=y+1, margin=0.2)
fit=RidgeBinaryLogistic(y,X, penalization = 0)
summary(fit)
fit=RidgeBinaryLogistic(y,X, penalization = 0.3)
summary(fit)
colnames(X)=abbreviate(colnames(X))
PLSheart=PLSR1Bin(y, X, S=4,penalization = 0.1, InitTransform = 1)
summary(PLSheart)
PLSheart=PLSR1Bin(y, X, S=4,penalization = 0.3, InitTransform = 1)
summary(PLSheart)
PLSheart=Biplot.PLSR1BIN(PLSheart)
plot(PLSheart, mode="s", ColorInd=y+1, margin=0.2)
