mean((lm.predict - BostonHousing$medv)^2)
plot(BostonHousing$medv, lm.predict,
main="Linear regression predictions vs actual",
xlab="Actual")
nnet.fit<- nnet(medv/50 ~ ., data=BostonHousing, size=2)
BostonHousing$medv
max(BostonHousing$medv)
maximo=max(Houses$price)
maximo
nnet.fit<- nnet(price/maximo ~ ., data=Houses, size=2)
nnet.predict <- predict(nnet.fit)*maximo
mean((nnet.predict - BostonHousing$medv)^2)
mean((nnet.predict - Houses$price)^2)
plot(Houses$price, nnet.predict,
main="Neural network predictions vs actual",
xlab="Actual")
nnet.fit<- nnet(price/maximo ~ ., data=Houses, size=2)
nnet.predict <- predict(nnet.fit)*maximo
nnet.predict
nnet.fit<- nnet(price/maximo ~ ., data=Houses, size=3)
nnet.predict <- predict(nnet.fit)*maximo
nnet.predict
nnet.fit <- nnet(medv/50 ~ ., data=BostonHousing, size=2)
nnet.predict <- predict(nnet.fit)*50
nnet.predict
mean((nnet.predict - BostonHousing$medv)^2)
plot(BostonHousing$medv, nnet.predict,
main="Neural network predictions vs actual",
xlab="Actual")
BostonHousing$medv
nnet.predict
help(neuralnet)
nn <- neuralnet(price ~ ., data=Houses, hidden=c(2,1), linear.output=FALSE, threshold=0.01)
nn <- neuralnet(price ~ ., data=Houses, hidden=c(2,1), linear.output=FALSE, threshold=0.01)
nn <- neuralnet(price ~ ., data=Houses2, hidden=c(2,1), linear.output=FALSE, threshold=0.01)
names(Houses)
nn <- neuralnet(price ~ bedrooms+bathrooms+m2_living+m2_lot+floors+yr_old, data=Houses2, hidden=c(2,1), linear.output=FALSE, threshold=0.01)
"
nn
plot(nn)
nn <- neuralnet(price ~ bedrooms+bathrooms+m2_living+m2_lot+floors+yr_old, data=Houses2, hidden=c(2,1), linear.output=TRUE, threshold=0.01)
url <- 'http://archive.ics.uci.edu/ml/machine-learning-databases/00243/yacht_hydrodynamics.data'
Yacht_Data <- read_table(file = url,
col_names = c('LongPos_COB', 'Prismatic_Coeff',
'Len_Disp_Ratio', 'Beam_Draut_Ratio',
'Length_Beam_Ratio','Froude_Num',
'Residuary_Resist')) %>%
na.omit()
Yacht_Data <- read_table(file = url,
col_names = c('LongPos_COB', 'Prismatic_Coeff',
'Len_Disp_Ratio', 'Beam_Draut_Ratio',
'Length_Beam_Ratio','Froude_Num',
'Residuary_Resist'))
Yacht_Data <- read.table(file = url,
col_names = c('LongPos_COB', 'Prismatic_Coeff',
'Len_Disp_Ratio', 'Beam_Draut_Ratio',
'Length_Beam_Ratio','Froude_Num',
'Residuary_Resist'))
library(tidyverse)
install.packages("tidyverse", lib="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages("GGally", lib="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(tidyverse)
library(neuralnet)
library(GGally)
Yacht_Data <- read_table(file = url,
col_names = c('LongPos_COB', 'Prismatic_Coeff',
'Len_Disp_Ratio', 'Beam_Draut_Ratio',
'Length_Beam_Ratio','Froude_Num',
'Residuary_Resist')) %>%
na.omit()
Yacht_Data
ggpairs(Yacht_Data, title = "Scatterplot Matrix of the Features of the Yacht Data Set")
Yacht_NN1 <- neuralnet(Residuary_Resist ~ LongPos_COB + Prismatic_Coeff +
Len_Disp_Ratio + Beam_Draut_Ratio + Length_Beam_Ratio +
Froude_Num, data = Yacht_Data_Train)
Yacht_NN1 <- neuralnet(Residuary_Resist ~ LongPos_COB + Prismatic_Coeff +
Len_Disp_Ratio + Beam_Draut_Ratio + Length_Beam_Ratio +
Froude_Num, data = Yacht_Data)
Yacht_NN1
plot(Yacht_NN1)
scale01 <- function(x){
(x - min(x)) / (max(x) - min(x))
}
Yacht_Data <- Yacht_Data %>%
mutate_all(scale01)
Yacht_Data
Yacht_NN1 <- neuralnet(Residuary_Resist ~ LongPos_COB + Prismatic_Coeff +
Len_Disp_Ratio + Beam_Draut_Ratio + Length_Beam_Ratio +
Froude_Num, data = Yacht_Data_Train)
set.seed(12345)
Yacht_Data_Train <- sample_frac(tbl = Yacht_Data, replace = FALSE, size = 0.80)
Yacht_Data_Test <- anti_join(Yacht_Data, Yacht_Data_Train)
set.seed(12321)
Yacht_NN1 <- neuralnet(Residuary_Resist ~ LongPos_COB + Prismatic_Coeff +
Len_Disp_Ratio + Beam_Draut_Ratio + Length_Beam_Ratio +
Froude_Num, data = Yacht_Data_Train)
Yacht_NN1
HousesData <- Houses %>%
mutate_all(scale01)
HousesData <- Houses %>%
mutate_all(X1)
X1
HousesData <- X1 %>%
mutate_all(scale01)
class(X1)
HousesData <- X1 %>%
mutate_all(scale01)
HousesData <- Houses[,1:10] %>%
mutate_all(scale01)
Yacht_NN1 <- neuralnet(price ~ ,, data = HousesData)
Yacht_NN1 <- neuralnet(price ~ ., data = HousesData)
HousesData
X1
Houses
XX=model.matrix(price ~., data=Houses)
XX
XX=XX[-1,]
XX
XX=XX[-1,]
XX
XX=model.matrix(price ~., data=Houses)
XX=XX[,-1]
XX
XX=cbind(Houses$price, XX[,-1])
XX=model.matrix(price ~., data=Houses)
XX=cbind(Houses$price, XX[,-1])
XX
write.csv(XX, file = "Houses.csv")
thepage = readLines('https://www.emagister.com/master-marketing-digital-direccion-marketing-cursos-3537927.htm')
linea=grep('¿Cuáles son los objetivos de este curso?',thepage)
mypattern ="<p><strong>·&nbsp;¿Cuáles son los objetivos de este curso?</strong></p>"
datalines = grep(mypattern,thepage[754:length(thepage)],value=TRUE)
texto=character()
while (GoOn){
datalines=thepage[linea+1]
}
datalines
X=matrix(runif(30), ncol=3)
X
y=matrix(y,ncol=1)
y=c(1,1,1,1,1,0,0,0,0,0)
y=matrix(y,ncol=1)
y
T3=matrix(runif(3), nrow=1)
X=matrix(runif(30), ncol=3)
y=c(1,1,1,1,1,0,0,0,0,0)
y=matrix(y,ncol=1)
T1=matrix(runif(20), ncol=4)
T2=matrix(runif(12), ncol=6)
T3=matrix(runif(3), nrow=1)
cbind(1,X)
cbind(1,X) %*%T1
T1=matrix(runif(20), ncol=5)
cbind(1,X) %*% T1
Z1=cbind(1,X) %*% T1
A1=1/1+exp(-1*Z1)
A1
Z1=cbind(1,X) %*% t(T1)
A1=matrix(runif(30), ncol=3)
y=c(1,1,1,1,1,0,0,0,0,0)
y=matrix(y,ncol=1)
T1=matrix(runif(20), ncol=4)
T2=matrix(runif(12), ncol=6)
T3=matrix(runif(3), nrow=1)
Z2=cbind(1,A1) %*% t(T1)
A2=1/1+exp(-1*Z1)
Z3=cbind(1,A2) %*% t(T2)
Z3
A3=1/1+exp(-1*Z3)
Z4=cbind(1,A3) %*% t(T3)
A4=1/1+exp(-1*Z4)
A4
Z4
Z2=cbind(1,A1) %*% t(T1)
A2=(1/1+exp(-1*Z1))
Z3=cbind(1,A2) %*% t(T2)
A3=1/(1+exp(-1*Z3))
Z4=cbind(1,A3) %*% t(T3)
A4=1/(1+exp(-1*Z4))
A2
Z2=cbind(1,A1) %*% t(T1)
A2=(1/1+exp(-1*Z1))
A2
Z3
A3=1/(1+exp(-1*Z3))
A3
A2=1/(1+exp(-1*Z1))
A2
Z3=cbind(1,A2) %*% t(T2)
A3=1/(1+exp(-1*Z3))
Z4=cbind(1,A3) %*% t(T3)
A4=1/(1+exp(-1*Z4))
A4
y=c(1,1,1,0,0,0,0,0,0,0,
0,0,0,1,1,1,0,0,0,0,
0,0,0,0,0,0,1,1,1,1)
y=matrix(y,ncol=3)
y
T1=matrix(runif(20), ncol=4)
T2=matrix(runif(12), ncol=6)
T3=matrix(runif(9), nrow=3)
Z2=cbind(1,A1) %*% t(T1)
A2=1/(1+exp(-1*Z1))
Z3=cbind(1,A2) %*% t(T2)
A3=1/(1+exp(-1*Z3))
Z4=cbind(1,A3) %*% t(T3)
A4=1/(1+exp(-1*Z4))
A4
E4=A4-Y
Y=matrix(y,ncol=3)
E4=A4-Y
E4
T3
y=c(1,1,1,0,0,0,0,0,0,0,0,
0,0,0,1,1,1,0,0,0,0,0,
0,0,0,0,0,0,1,1,1,0,0,
0,0,0,0,0,0,0,0,0,1,1
)
Y=matrix(y,ncol=3)
Y=matrix(y,ncol=4)
T1=matrix(runif(20), ncol=4)
T2=matrix(runif(12), ncol=6)
T3=matrix(runif(9), nrow=4)
Z2=cbind(1,A1) %*% t(T1)
A2=1/(1+exp(-1*Z1))
Z3=cbind(1,A2) %*% t(T2)
A3=1/(1+exp(-1*Z3))
Z4=cbind(1,A3) %*% t(T3)
A4=1/(1+exp(-1*Z4))
T3=matrix(runif(12), nrow=4)
Z2=cbind(1,A1) %*% t(T1)
A2=1/(1+exp(-1*Z1))
Z3=cbind(1,A2) %*% t(T2)
A3=1/(1+exp(-1*Z3))
Z4=cbind(1,A3) %*% t(T3)
A4=1/(1+exp(-1*Z4))
E4=A4-Y
A4
hidden=c(5,2,3)
A1=matrix(runif(33), ncol=3)
y=c(1,1,1,0,0,0,0,0,0,0,0,
0,0,0,1,1,1,0,0,0,0,0,
0,0,0,0,0,0,1,1,1,0,0,
0,0,0,0,0,0,0,0,0,1,1
)
Y=matrix(y,ncol=4)
T1=matrix(runif(20), ncol=4)
T2=matrix(runif(12), ncol=6)
T3=matrix(runif(12), nrow=4)
Z2=cbind(1,A1) %*% t(T1)
A2=1/(1+exp(-1*Z1))
Z3=cbind(1,A2) %*% t(T2)
A3=1/(1+exp(-1*Z3))
Z4=cbind(1,A3) %*% t(T3)
A4=1/(1+exp(-1*Z4))
E4=A4-Y
A4
T1
Z2
A2
Z2=cbind(1,A1) %*% t(T1)
A2=1/(1+exp(-1*Z2))
Z3=cbind(1,A2) %*% t(T2)
A3=1/(1+exp(-1*Z3))
Z4=cbind(1,A3) %*% t(T3)
A4=1/(1+exp(-1*Z4))
E4=A4-Y
E4
E4=A4-Y
E3=(A3*(1-A3))
E3
T3
E3
E4
T3
E4 %% T3
E4 %*% T3
(A3*(1-A3))
A3
E3= (cbind(1,A3)*(1-cbind(1,A3)))
E3
E4 %*% T3
E3= (E4 %*% T3)* (cbind(1,A3)*(1-cbind(1,A3)))
E3
E3= (E4 %*% T3)* (cbind(1,A3)*(1-cbind(1,A3)))
E3
E2= (E3 %*% T2)* (cbind(1,A2)*(1-cbind(1,A2)))
T2
E3
(cbind(1,A2)*(1-cbind(1,A2)))
A2
cbind(1,A2)
(cbind(1,A2)*(1-cbind(1,A2)))
(E3 %*% T2)
E3
T2
E4
T3
E4
A3
E4
A4
E4
T3
(E4 %*% T3)
A3
A2
T1=matrix(runif(15), ncol=3)
T2=matrix(runif(10), ncol=5)
T3=matrix(runif(8), nrow=2)
Z2=A1 %*% t(T1)
A2=1/(1+exp(-1*Z2))
Z3=A2 %*% t(T2)
A3=1/(1+exp(-1*Z3))
Z4=A3 %*% t(T3)
T3
A3
T2
A2
A3
T3=matrix(runif(12), ncol=2)
Z2=cbind(1,A1) %*% t(T1)
A2=1/(1+exp(-1*Z2))
Z3=cbind(1,A2) %*% t(T2)
A3=1/(1+exp(-1*Z3))
Z4=cbind(1,A3) %*% t(T3)
T1=matrix(runif(15), ncol=3)
T2=matrix(runif(10), ncol=5)
T3=matrix(runif(8), nrow=2)
Z2=A1 %*% t(T1)
A2=1/(1+exp(-1*Z2))
Z3=A2 %*% t(T2)
A3=1/(1+exp(-1*Z3))
Z4=A3 %*% t(T3)
A3
T1=matrix(runif(15), ncol=3)
T2=matrix(runif(10), ncol=5)
T3=matrix(runif(8), ncol=2)
Z2=A1 %*% t(T1)
A2=1/(1+exp(-1*Z2))
Z3=A2 %*% t(T2)
A3=1/(1+exp(-1*Z3))
Z4=A3 %*% t(T3)
A4=1/(1+exp(-1*Z4))
E4=A4-Y
E3= (E4 %*% T3)* (cbind(1,A3)*(1-cbind(1,A3)))
E4
T3
(E4 %*% T3)
A3
E3= (E4 %*% T3)* (A3*(1-A3))
E2= (E3 %*% T2)* (A2*(1-A2))
A1
A2
A3
A4
E4=A4-Y
E3= (E4 %*% T3)* (A3*(1-A3))
E2= (E3 %*% T2)* (A2*(1-A2))
A1 %* E2
A1 %*% E2
A1
E2
A2 %*% E2
A2
T1
A2
A1
A1 %*% t(E2)
t(A1) %*% E2
t(E2) %*% A1
T1
TT2=t(E3) %*% A2
tt3=t(E4) %*% A3
install.packages("magick")
library(magick)
str(magick::magick_config())
library(magick)
install.packages("imager", lib="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
file <- system.file('extdata/parrots.png',package='imager')
im <- load.image(file)
library(imager)
file <- system.file('extdata/parrots.png',package='imager')
im <- load.image(file)
plot(im)
X
n=nrow(X)
p=ncol(X)
sl=c(p, hidden, 1)
L=length(sl)
sl
hidden
hidden=1
sl=c(p, hidden, 1)
L=length(sl)
sl
L
vec()
vec
library(MultBiplotR)
vec
vec(X)
X
hidden
hidden=c(5,2,3)
TT1
hidden=c(5,2,3)
A1=matrix(runif(33), ncol=3)
y=c(1,1,1,0,0,0,0,0,0,0,0,
0,0,0,1,1,1,0,0,0,0,0,
0,0,0,0,0,0,1,1,1,0,0,
0,0,0,0,0,0,0,0,0,1,1
)
Y=matrix(y,ncol=4)
# sin cte
T1=matrix(runif(15), ncol=3)
T2=matrix(runif(10), ncol=5)
T3=matrix(runif(8), ncol=2)
Z2=A1 %*% t(T1)
A2=1/(1+exp(-1*Z2))
Z3=A2 %*% t(T2)
A3=1/(1+exp(-1*Z3))
Z4=A3 %*% t(T3)
A4=1/(1+exp(-1*Z4))
E4=A4-Y
E3= (E4 %*% T3)* (A3*(1-A3))
E2= (E3 %*% T2)* (A2*(1-A2))
TT1=t(E2) %*% A1
TT2=t(E3) %*% A2
TT3=t(E4) %*% A3
X=A1
TT1
TT2
TT3
vec(TT1)$v
c(vec(TT1)$v, vec(TT1)$v, vec(TT1)$v)
theta=c(vec(TT1)$v, vec(TT1)$v, vec(TT1)$v)
hidden
X
n=nrow(X)
p=ncol(X)
y
Y
q=ncol(Y)
q
p
sl=c(p, hidden, q)
L=length(sl)
Theta=list()
ini=0
ini=0
for (i in 1 : (L-1)){
elem=sl[i+1]*sl[i]
end=ini+elem
Theta[[i]]=matrix(theta[ini:end], nrow=sl[i+1])
ini=end
}
sl[i+1]
Theta
library(readxl)
Size <- read_excel("~/Library/Mobile Documents/com~apple~CloudDocs/DATA JLVV-10-18/Tamano_Lesion.xlsx")
View(Size)
Size$CEPA
Size$CEPA=factor(Size$CEPA)
Size$CEPA
Size$EXPERIMENTO=factor(Size$EXPERIMENTO)
Size$REPETICIÓN=factor(Size$EXPERIMENTO)
library(readxl)
Size <- read_excel("~/Library/Mobile Documents/com~apple~CloudDocs/DATA JLVV-10-18/Tamano_Lesion.xlsx")
View(Size)
Size$EXPERIMENTO=factor(Size$EXPERIMENTO)
Size$CEPA=factor(Size$CEPA)
levels(Size$CEPA)
Repetidos=Size[Size$CEPA==M1001,]
Repetidos=Size[Size$CEPA=="M1001",]
Repetidos
aov(LESION~EXPERIMENTO, data=Repetidos)
comparar=aov(LESION~EXPERIMENTO, data=Repetidos)
summary(comparar)
plot(LESION~EXPERIMENTO, data=Repetidos)
plot(LESION~CEPA, data=Size)
Size$EXPERIMENTO
help()
help(tapply)
tapply(Size$LESION, list(Size$CEPA, Size$EXPERIMENTO), mean)
tapply(Size$LESION, list(Size$EXPERIMENTO, Size$CEPA), mean)
plot(LESION~CEPA, data=Size[Size$EXPERIMENTO==1])
plot(LESION~CEPA, data=Size[Size$EXPERIMENTO==1,])
Size <- read_excel("~/Library/Mobile Documents/com~apple~CloudDocs/DATA JLVV-10-18/Tamano_Lesion.xlsx")
unique(Size$CEPA)
plot(LESION~CEPA, data=Size[Size$EXPERIMENTO==2,])
Size[Size$EXPERIMENTO==2,]
plot(LESION~CEPA, data=Size[Size$EXPERIMENTO==2,])
plot(LESION~CEPA, data=Size[Size$EXPERIMENTO==3,])
plot(LESION~CEPA, data=Size[Size$EXPERIMENTO==1,])
Size$EXPERIMENTO=factor(Size$EXPERIMENTO)
Size$CEPA=factor(Size$CEPA)
levels(Size$CEPA)
Repetidos=Size[Size$CEPA=="M1001",]
plot(LESION~EXPERIMENTO, data=Repetidos)
Unicos=Size[-(Size$CEPA=="M1001"),]
plot(LESION~EXPERIMENTO, data=Unicos)
plot(LESION~CEPA, data=Size[Size$EXPERIMENTO==1,])
Size <- read_excel("~/Library/Mobile Documents/com~apple~CloudDocs/DATA JLVV-10-18/Tamano_Lesion.xlsx")
plot(LESION~EXPERIMENTO, data=Unicos)
plot(LESION~CEPA, data=Size[Size$EXPERIMENTO==1,])
LESION
data=Size[Size$EXPERIMENTO==1,]
Size[Size$EXPERIMENTO==1,]
plot(LESION~as.factor(CEPA), data=Size[Size$EXPERIMENTO==1,])
plot(LESION~as.factor(CEPA), data=Size[Size$EXPERIMENTO==2,])
plot(LESION~as.factor(CEPA), data=Size[Size$EXPERIMENTO==3,])
