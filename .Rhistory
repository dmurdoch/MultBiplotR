library(dae)
AB <- fac.combine(list(Datos2$Year,Datos2$Month), combine.levels=TRUE)
pcoYeMo=AddCluster2Biplot(pco, ClusterType="us", Groups=AB)
plot(pcoYeMo, PlotClus = TRUE, TypeClus = "oc", RowCex=0.7, ClustCenters = TRUE, LabelRows=FALSE, ShowBox=TRUE, Title="Years - Months")
opar <- par(mfrow = c(2,2))
# Colorear los puntos de acuerdo con el mes
pcoMonth=AddCluster2Biplot(pco, ClusterType="us", Groups=Datos2$Month)
plot(pcoMonth, PlotClus = TRUE, TypeClus = "ch", RowCex=0.7, ClustCenters = TRUE, LabelRows=FALSE, ShowBox=TRUE, Title="Months")
# Colorear los puntos de acuerdo con el a침o
pcoYear=AddCluster2Biplot(pco, ClusterType="us", Groups=Datos2$Year)
plot(pcoYear, PlotClus = TRUE, TypeClus = "ch", RowCex=0.7, ClustCenters = TRUE, LabelRows=FALSE, ShowBox=TRUE, Title="Years")
# Colorear los puntos de acuerdo con la estaci칩n
pcoSeason=AddCluster2Biplot(pco, ClusterType="us", Groups=Datos2$Season)
plot(pcoSeason, PlotClus = TRUE, TypeClus = "ch", RowCex=0.7, ClustCenters = TRUE, LabelRows=FALSE, ShowBox=TRUE, Title="Season")
# Colorear los puntos de acuerdo con el a침o y el mes
library(dae)
AB <- fac.combine(list(Datos2$Year,Datos2$Month), combine.levels=TRUE)
pcoYeMo=AddCluster2Biplot(pco, ClusterType="us", Groups=AB)
plot(pcoYeMo, PlotClus = TRUE, TypeClus = "oc", RowCex=0.7, ClustCenters = TRUE, LabelRows=FALSE, ShowBox=TRUE, Title="Years - Months")
par(opar)
plot(pco, RowCex=0.7, LabelRows=FALSE, RowColors="red", PlotBinaryMeans=TRUE, MinIncidence=6)
plot(pcoYeMo, PlotClus = TRUE, TypeClus = "oc", RowCex=0.7, ClustCenters = TRUE, LabelRows=FALSE, PlotBinaryMeans=TRUE, CexClustCenters=0.7)
plot(pco, RowCex=0.7, LabelRows=FALSE, RowColors="red", PlotBinaryMeans=TRUE, MinIncidence=6, ShowBox=TRUE)
plot(pco, RowCex=0.7, LabelRows=FALSE, RowColors="red", PlotBinaryMeans=TRUE, MinIncidence=6, ShowBox=TRUE, Title="Species averages")
pcobip=ExternalBinaryLogisticBiplot(pco)
pcobip=AddCluster2Biplot(pcobip, ClusterType="us", Groups=Datos2$Month)
plot(pcobip, LabelRows=FALSE, Mode="s", MinQualityCols=0.6, PlotClus = FALSE, TypeClus = "st", margin=0)
plot(pcobip, LabelRows=FALSE, Mode="a", MinQualityCols=0.6, PlotClus = FALSE, TypeClus = "st", margin=0)
# Eliminamos las semanas con frecuencias bajas
minmarginal=0
sumas=apply(Mush1, 1, sum)
Mush2= Mush1[sumas>minmarginal,]
sumas2=apply(Mush2, 2, sum)
Mush2= Mush2[,sumas2>0]
EnvVar2=EnvVar[sumas>minmarginal,]
ccamush=CCA(Mush2,EnvVar2)
summary(ccamush)
plot(ccamush, mode="s", margin=0.2)
camush=CA(Mush2)
plot(camush, mode="s", margin=0.2)
bip=PCA.Biplot(EnvVar)
bip=AddCluster2Biplot(bip, ClusterType="us", Groups=Datos2$Month)
plot(bip,PlotClus = TRUE, TypeClus = "st", ClustCenters = TRUE, LabelInd=FALSE)
library(MultBiplotR)
help("PrincipalCoordinates")
data(spiders)
Dis=BinaryProximities(spiders)
pco=PrincipalCoordinates(Dis)
Dis=BinaryProximities(spiders)
pco=PrincipalCoordinates(Dis, Bootstrap=TRUE)
plot(pco)
plot(pco, Bootstrap=TRUE)
ConcEllipse
plot(pco, Bootstrap=TRUE, BootstrapPlot="Star")
plot(pco, Bootstrap=TRUE, BootstrapPlot="ConvexHull")
library(GEOquery)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("GEOquery")
library(GEOquery)
gds <- getGEO(filename=system.file("extdata/GDS507.soft.gz",package="GEOquery"))
gds <- getGEO(filename=system.file("extdata/GDS3345.soft.gz",package="GEOquery"))
gds <- getGEO(filename=system.file("GDS3345.soft.gz",package="GEOquery"))
gds <- getGEO(filename=system.file("extdata/GDS3345.soft.gz",package="GEOquery"))
gds <- getGEO("GDS3345")
Columns(gsd)
Columns(gds)
gse3345 <- getGEO('GSE3345',GSEMatrix=TRUE) > show(gse2553)
gse3345 <- getGEO('GSE3345',GSEMatrix=TRUE) > show(gse3345)
gse3345
eset <- GDS2eSet(gds,do.log2=TRUE)
eset
pData(eset)
Meta(gds)$platform
gpl <- getGEO(filename=system.file("extdata/GPL8300.annot.gz",package="GEOquery"))
gpl <- getGEO("GPL8300.annot.gz")
gpl <- getGEO("GPL8300.annot.gz")
gpl <- getGEO("GPL97.annot.gz")
installed.packages()
paquetes=installed.packages()
MA <- GDS2MA(gds,GPL=gpl)
paquetes
save(paquetes, file="paquetes.txt")
save(paquetes, file="paquetes.txt")
save(paquetes, file="paquetes.txt")
load("paquetes.txt")
paquetes
install.packages(paquetes)
install.packages(paquetes)
install.packages(paquetes)
install.packages(paquetes)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("GEOquery")
library(GEOquery)
gds <- getGEO("GDS3345")
Columns(gds)
eset <- GDS2eSet(gds,do.log2=TRUE)
pData(eset)
Meta(gds)$platform
gpl <- getGEO("GPL8300.annot.gz")
gds <- getGEO("GDS3345", AnnotGPL=TRUE)
gds
Columns(gds)
eset <- GDS2eSet(gds,do.log2=TRUE)
pData(eset)
Meta(gds)$platform
MA <- GDS2MA(gds)
MA <- GDS2MA(gds)
MA
MA$M
dim(MA$M)
library(limma)
RG <- read.maimages(targets, source="genepix", wt.fun=f)
targets <- readTargets("targets.txt")
normalizeWithinArrays(RG)
normalizeWithinArrays(MA)
MA
normalizeWithinArrays(MA$M)
MA$M
normalizeWithinArrays(MA$M)
MA
dim(MA$M)
library(limma)
normalizeWithinArrays(MA$M)
normalizeWithinArrays(MA)
RG <- backgroundCorrect(MA, method="normexp", offset=50)
MA <- normalizeWithinArrays(RG)
MA <- normalizeWithinArrays(RG)
MA
MA
MA
RG
boxplot(MA)
y <- normalizeBetweenArrays(x)
ngenes <- 100
narrays <- 4
x <- matrix(rnorm(ngenes*narrays),100,4)
y <- normalizeBetweenArrays(x)
x
y
RG
MA <- GDS2MA(gds)
class(MA)
MA <- normalizeWithinArrays(RG)
MA2 <- normalizeWithinArrays(MA)
library(limma)
RG <- backgroundCorrect(MA, method="normexp", offset=50)
MA2 <- normalizeWithinArrays(RG)
RG
class(RG)
RG
MA2 <- normalizeQuantiles(RG)
MA2
boxplot(RG)
boxplot(MA2)
MA2
sd <- 0.3*sqrt(4/rchisq(100,df=4))
y <- matrix(rnorm(100*6,sd=sd),100,6)
rownames(y) <- paste("Gene",1:100)
y[1:2,4:6] <- y[1:2,4:6] + 2
design <- cbind(Grp1=1,Grp2vs1=c(0,0,0,1,1,1))
options(digits=3)
# Ordinary fit
fit <- lmFit(y,design)
y
design
design
design
y
library(MultBiplotR)
source("https://bioconductor.org/biocLite.R")
biocLite()
BiocManager::install()
BiocManager::install("affy")
BiocManager::install("GEOquery")
BiocManager::install("Biobase")
setwd("~/Desktop/TrabajoOmicos")
gcel<-getGEOSuppFiles("GSE12654")
setwd("~/Desktop/TrabajoOmicos/GSE12654/GSE12654_RAW")
setwd("~/Desktop/TrabajoOmicos/GSE12654/GSE12654_RAW")
gse12654<-ReadAffy()
library(affy)
library(GEOquery)
library(Biobase)
gse12654<-ReadAffy()
setwd("~/Desktop/TrabajoOmicos")
gse12654.Variables<-getGEO("GSE12654")[[1]]
varLabels(gse12654.Variables)
gse12654.Variables$title
head(pData(gse12654.Variables)[, "title"])
group <-  as.factor(substring(pData(gse12654.Variables)[,"title"], 1, 4))
Datos <- gse12654
class(Datos)
head(Datos)
annotation(Datos)
BiocManager::install("geneplotter")
library(geneplotter) #Comprobaci칩n control de calidad
multidensity(exprs(Datos))
boxplot.matrix(exprs(Datos))
Datos.norm<-affy::rma(Datos)
Datos.exp <- exprs(Datos.norm)
dim(Datos.exp)
Datos.ir<- apply(Datos.exp, 1, IQR)
Datos.ir
sel.ir<-(Datos.ir>quantile(Datos.ir, 0.5))
Datos.mediana<-apply(Datos.exp,1,median)
sel.mediana<-(Datos.mediana>quantile(Datos.mediana,0.5))
Datos.data<-Datos.exp[sel.ir & sel.mediana,]
dim(Datos.data)
library(PerMANOVA)
DistDatos <- DistanciasContinuas(t(Datos.data))
PERM <- PERMANOVA(DistDatos, group)
PERM
Datos.data
Datos.mediana
Datos.exp
Datos.norm
Datos.exp
group
table(group)
help("PERMANOVA")
data(wine)
X = wine[,4:21]
D = DistanciasContinuas (X)
PERMANOVA(D, wine$Group)
PERM
matrix(c(1, -1, 0,0, 0, -1, 1, 0, 0, -1, 0, 1), nrow=3)
matrix(c(1, -1, 0,0, 0, -1, 1, 0, 0, -1, 0, 1), nrow=3, byrow = TRUE)
PERM <- PERMANOVA(DistDatos, group, C=C)
PERM <- PERMANOVA(DistDatos, group , C=C)
PERM <- PERMANOVA(DistDatos, group, C=C)
source('~/Dropbox/0 Laura-Jose/NuevosPaquete/permanova/R/PERMANOVA.R')
PERM <- PERMANOVA(DistDatos, group, C=C)
DistDatos
C=matrix(c(1, -1, 0,0, 0, -1, 1, 0, 0, -1, 0, 1), nrow=3, byrow = TRUE)
PERM <- PERMANOVA(DistDatos, group , C=C)
PERM
pco=PrincipalCoordinates(DistDatos)
pco=PrincipalCoordinates(DistDatos$D)
class(DistDatos)
pco=PrincipalCoordinates(DistDatos)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/PrincipalCoordinates.R')
pco=PrincipalCoordinates(DistDatos)
DistDatos$D
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/PrincipalCoordinates.R')
pco=PrincipalCoordinates(DistDatos)
plot(pco)
plot(pco, RowColors = as.numeric(group)+1)
help(AddCluster2Biplot)
AddCluster2Biplot(pco, ClusterType = "us", Groups = group)
pco=AddCluster2Biplot(pco, ClusterType = "us", Groups = group)
plot(pco, RowColors = as.numeric(group)+1)
plot(pco, PlotClus = TRUE )
plot(pco, PlotClus = TRUE, ClustCenters = TRUE )
pco=AddCluster2Biplot(pco, ClusterType = "us", Groups = group)
plot(pco, PlotClus = TRUE, ClustCenters = TRUE )
BiocManager::install("GEOquery")
library(GEOquery)
gds <- getGEO("GDS3345", AnnotGPL=TRUE)
Columns(gds)
eset <- GDS2eSet(gds,do.log2=TRUE)
pData(eset)
pData(eset)$disease.state
Meta(gds)$platform
MA <- GDS2MA(gds)
class(MA)
dim(MA$M)
library(limma)
RG <- backgroundCorrect(MA, method="normexp", offset=50)
boxplot(RG)
MA2 <- normalizeQuantiles(RG)
boxplot(MA2)
MA2
MA
MA2
DistDatos <- DistanciasContinuas(t(MA2))
PERM <- PERMANOVA(DistDatos, group)
C=matrix(c(1, -1, 0,0, 0, -1, 1, 0, 0, -1, 0, 1), nrow=3, byrow = TRUE)
PERM <- PERMANOVA(DistDatos, group , C=C)
PERM
pco=PrincipalCoordinates(DistDatos)
class(DistDatos)
pco=AddCluster2Biplot(pco, ClusterType = "us", Groups = group)
plot(pco, PlotClus = TRUE, ClustCenters = TRUE )
group=pData(eset)$disease.state
group
C=matrix(c(1, -1, 0,0, 0, -1, 1, 0, 0, -1, 0, 1), nrow=3, byrow = TRUE)
PERM <- PERMANOVA(DistDatos, group , C=C)
PERM
pco=PrincipalCoordinates(DistDatos)
class(DistDatos)
pco=AddCluster2Biplot(pco, ClusterType = "us", Groups = group)
plot(pco, PlotClus = TRUE, ClustCenters = TRUE )
group
pco=AddCluster2Biplot(pco, ClusterType = "us", Groups = group)
pco1=PrincipalCoordinates(DistDatos)
pco1=AddCluster2Biplot(pco, ClusterType = "us", Groups = group)
plot(pco1, PlotClus = TRUE, ClustCenters = TRUE )
print(x$TypeData)
source('~/Library/Mobile Documents/com~apple~CloudDocs/0 ProgramasR/Paquetes/MultBiplotR/R/plot.Principal.Coordinates.R')
pco1$TypeData="Continuous"
plot(pco1, PlotClus = TRUE, ClustCenters = TRUE )
plot(pco1, PlotClus = TRUE, ClustCenters = TRUE )
RG
boxplot(RG)
PERM <- PERMANOVA(DistDatos, group , C=C, CoordPrinc=TRUE)
PERM
plot(PERM)
PERM <- PERMANOVA(DistDatos, group , C=C, CoordPrinc=TRUE, nperm = 10000)
PERM
plot(PERM)
gds <- getGEO("GDS39549", AnnotGPL=TRUE)
gds <- getGEO("GDS6248", AnnotGPL=TRUE)
Columns(gds)
eset <- GDS2eSet(gds,do.log2=TRUE)
eset
group=pData(eset)$disease.state
group
pData(eset)
Meta(gds)$platform
eset
experimentData(eset)
eset <- GDS2eSet(gds,do.log2=TRUE)
group=pData(eset)$disease.state
Meta(gds)$platform
experimentData(eset)
MA <- GDS2MA(gds)
class(MA)
dim(MA$M)
library(limma)
RG <- backgroundCorrect(MA, method="normexp", offset=50)
boxplot(RG)
MA2 <- normalizeQuantiles(RG)
boxplot(MA2)
DistDatos <- DistanciasContinuas(t(MA2))
PERM <- PERMANOVA(DistDatos, group)
pData(eset)
kronecker(rep(1,17))
rep(1,17)
kronecker(rep(1,17),c(1,2,3))
kronecker(c(1:17),c(1,2,3))
1,1,
kronecker(c(1:17),c(1,1,2))
kronecker(c(1:17),c(1,1,1))
group=factor(kronecker(c(1:17),c(1,1,1)))
group=factor(kronecker(c(1:17),c(1,1,1)))
group
DistDatos <- DistanciasContinuas(t(MA2))
PERM <- PERMANOVA(DistDatos, group)
PERM
pco1=PrincipalCoordinates(DistDatos)
pco1=AddCluster2Biplot(pco, ClusterType = "us", Groups = group)
pco1$TypeData="Continuous"
plot(pco1, PlotClus = TRUE, ClustCenters = TRUE )
pco1=AddCluster2Biplot(pco1, ClusterType = "us", Groups = group)
pco1$TypeData="Continuous"
plot(pco1, PlotClus = TRUE, ClustCenters = TRUE )
pco1
group)
group
DistDatos
pco1=PrincipalCoordinates(DistDatos)
pco1=AddCluster2Biplot(pco1, ClusterType = "us", Groups = group)
pco1$TypeData="Continuous"
plot(pco1, PlotClus = TRUE, ClustCenters = TRUE )
pData(eset)
MA <- GDS2MA(gds, do.log2=TRUE)
MA
dim(MA$M)
library(limma)
RG <- backgroundCorrect(MA, method="normexp", offset=50)
boxplot(RG)
MA2 <- normalizeQuantiles(RG)
boxplot(MA2)
group=factor(kronecker(c(1:17),c(1,1,1)))
DistDatos <- DistanciasContinuas(t(MA2))
PERM <- PERMANOVA(DistDatos, group)
PERM
pData(eset)
pco1=PrincipalCoordinates(DistDatos)
pco1=AddCluster2Biplot(pco1, ClusterType = "us", Groups = group)
pco1$TypeData="Continuous"
plot(pco1, PlotClus = TRUE, ClustCenters = TRUE )
plot(pco, PlotClus = TRUE, ClustCenters = TRUE, LabelRows=FALSE)
plot(pco1, PlotClus = TRUE, ClustCenters = TRUE, , LabelRows=FALSE)
plot(pco1, PlotClus = TRUE, ClustCenters = TRUE,  LabelRows=FALSE)
PERM <- PERMANOVA(DistDatos, group, CoordPrinc=TRUE)
plot(PERM)
plot(PERM,  LabelRows=FALSE)
gds <- getGEO("GDS6177", AnnotGPL=TRUE)
Columns(gds)
gds <- getGEO("GD5948", AnnotGPL=TRUE)
gds <- getGEO("GD5204", AnnotGPL=TRUE)
gds <- getGEO("GDS5204", AnnotGPL=TRUE)
Columns(gds)
MA <- GDS2MA(gds, do.log2=TRUE)
class(MA)
pData(eset)
eset <- GDS2eSet(gds,do.log2=TRUE)
pData(eset)
Meta(gds)$platform
experimentData(eset)
MA <- GDS2MA(gds, do.log2=TRUE)
pData(eset)
dim(MA$M)
group=c(rep(1,12), rep(2,9), rep(3,16), rep(4,4))
group
group=factor(c(rep(1,12), rep(2,9), rep(3,16), rep(4,4)))
group
levels(group)=c("<40", "40-70", "70-94", "95-106")
group
DistDatos <- DistanciasContinuas(t(MA2))
PERM <- PERMANOVA(DistDatos, group, CoordPrinc=TRUE)
RG <- backgroundCorrect(MA, method="normexp", offset=50)
boxplot(RG)
MA2 <- normalizeQuantiles(RG)
boxplot(MA2)
group=factor(c(rep(1,12), rep(2,9), rep(3,16), rep(4,4)))
levels(group)=c("<40", "40-70", "70-94", "95-106")
DistDatos <- DistanciasContinuas(t(MA2))
PERM <- PERMANOVA(DistDatos, group, CoordPrinc=TRUE)
PERM
plot(PERM,  LabelRows=FALSE)
pco1=PrincipalCoordinates(DistDatos)
pco1=AddCluster2Biplot(pco1, ClusterType = "us", Groups = group)
pco1$TypeData="Continuous"
plot(pco1, PlotClus = TRUE, ClustCenters = TRUE,  LabelRows=FALSE)
C=matrix(c(-1, 1, 0,0, 0, 1, -1, 0, 0, 11, 0, -1), nrow=3, byrow = TRUE)
C
C=matrix(c(-1, 1, 0,0, 0, 1, -1, 0, 0, 1, 0, -1), nrow=3, byrow = TRUE)
C
PERM <- PERMANOVA(DistDatos, group , C=C, CoordPrinc=TRUE, nperm = 10000)
PERM
plot(PERM,  LabelRows=FALSE)
sd <- 0.3*sqrt(4/rchisq(100,df=4))
y <- matrix(rnorm(100*6,sd=sd),100,6)
rownames(y) <- paste("Gene",1:100)
y[1:2,4:6] <- y[1:2,4:6] + 2
design <- cbind(Grp1=1,Grp2vs1=c(0,0,0,1,1,1))
design
design <- cbind(Grp1=1,Grp2vs1=c(0,0,0,1,1,1))
options(digits=3)
# Ordinary fit
fit <- lmFit(y,design)
fit
fit <- eBayes(fit)
fit
topTable(fit,coef=2)
C
Factor2Binary(group)
cbind(1, Factor2Binary(group)[,-4])
design=cbind(1, Factor2Binary(group)[,-1])
design
columns=colnames(design)
columns
columns[1]="<40"
columns
# Ordinary fit
fit <- lmFit(MA2,design)
fit
fit <- eBayes(fit)
topTable(fit,coef=2)
dim(fit)
colnames(fit)
rownames(fit)[1:10]
names(fit)
topTable
sign=topTable(fit,coef=2)
sign
dim(sign)
dim(sign)
colnames(fit)
colnames(sign)
rownames(sign)
# Fold-change thresholding
fit2 <- treat(fit,lfc=0.1)
topTreat(fit2,coef=2)
volcanoplot(fit,coef=2,highlight=2)
MA2
RG
MA
gds
Columns(gds)
Columns(gds)
gds <- getGEO("GDS5204", AnnotGPL=TRUE)
gds
eset <- GDS2eSet(gds,do.log2=TRUE)
eset
eset <- GDS2eSet(gds,do.log2=TRUE)
pData(eset)
Meta(gds)$platform
experimentData(eset)
library(MultBiplotR)
library(NominalLogisticBiplot)
data(HairColor)
data = data.matrix(HairColor)
G = NominalMatrix2Binary(data)
mca=afc(G,dim=2)
depVar = data[,1]
rmr = RidgeMultinomialRegression(depVar,mca$RowCoordinates[,1:2],penalization=0.1)
rmr
design=cbind(1, Factor2Binary(group)[,-1])
depVar
install.packages("npmv")
library(npmv)
data(sberry)
sberry
data(sberry)
nonpartest(weight|bot|fungi|rating~treatment,sberry,permreps=1000)
ssnonpartest(weight|bot|fungi|rating~treatment,sberry,test=c(1,0,0,0),alpha=.05,
factors.and.variables=TRUE)
